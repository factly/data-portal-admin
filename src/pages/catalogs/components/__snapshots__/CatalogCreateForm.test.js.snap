// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Catalogs Create Form component snapshot testing should match component in all steps 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CatalogCreateForm
    data={
      Object {
        "description": "description",
        "price": 100,
        "products": Array [],
        "published_date": "2020-12-12T00:00:00.000Z",
        "title": "title",
      }
    }
  >
    <ForwardRef(InternalForm)
      initialValues={
        Object {
          "description": "description",
          "price": 100,
          "products": Array [],
          "published_date": "2020-12-12T00:00:00.000Z",
          "title": "title",
        }
      }
      labelCol={
        Object {
          "span": 6,
        }
      }
      name="catalogs_create"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 14,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "name": "catalogs_create",
              },
              "getFieldError": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="catalogs_create"
          initialValues={
            Object {
              "description": "description",
              "price": 100,
              "products": Array [],
              "published_date": "2020-12-12T00:00:00.000Z",
              "title": "title",
            }
          }
          name="catalogs_create"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="catalogs_create"
            onSubmit={[Function]}
          >
            <FormItem
              label="Title"
              name="title"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog name!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Title"
                messageVariables={
                  Object {
                    "label": "Title",
                  }
                }
                name="title"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog name!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_title"
                  label="Title"
                  messageVariables={
                    Object {
                      "label": "Title",
                    }
                  }
                  name={
                    Array [
                      "title",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog name!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_title"
                        label="Title"
                        name="title"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_title"
                              title="Title"
                            >
                              Title
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Title"
                        name={
                          Array [
                            "title",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value="title"
                                >
                                  <Input
                                    id="catalogs_create_title"
                                    onChange={[Function]}
                                    placeholder="Ex. Cricket"
                                    type="text"
                                    value="title"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_title"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Cricket"
                                          type="text"
                                          value="title"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_title"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value="title"
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_title"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Cricket"
                                        type="text"
                                        value="title"
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Description"
              name="description"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog description!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Description"
                messageVariables={
                  Object {
                    "label": "Description",
                  }
                }
                name="description"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog description!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_description"
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name={
                    Array [
                      "description",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog description!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_description"
                        label="Description"
                        name="description"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_description"
                              title="Description"
                            >
                              Description
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Description"
                        name={
                          Array [
                            "description",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value="description"
                                >
                                  <Input
                                    id="catalogs_create_description"
                                    onChange={[Function]}
                                    placeholder="Ex. Package of datasets of Indian cricket"
                                    type="text"
                                    value="description"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Package of datasets of Indian cricket"
                                          type="text"
                                          value="description"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_description"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Package of datasets of Indian cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value="description"
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_description"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Package of datasets of Indian cricket"
                                        type="text"
                                        value="description"
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Price"
              name="price"
              rules={
                Array [
                  Object {
                    "message": "Please enter price!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Price"
                messageVariables={
                  Object {
                    "label": "Price",
                  }
                }
                name="price"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_price"
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name={
                    Array [
                      "price",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_price"
                        label="Price"
                        name="price"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_price"
                              title="Price"
                            >
                              Price
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Price"
                        name={
                          Array [
                            "price",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={100}
                                >
                                  <InputNumber
                                    id="catalogs_create_price"
                                    min={0}
                                    onChange={[Function]}
                                    placeholder="Ex. 1999"
                                    step={1}
                                    value={100}
                                  >
                                    <InputNumber
                                      autoComplete="off"
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      focusOnUpDown={true}
                                      id="catalogs_create_price"
                                      min={0}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPressEnter={[Function]}
                                      parser={[Function]}
                                      placeholder="Ex. 1999"
                                      prefixCls="ant-input-number"
                                      required={false}
                                      step={1}
                                      style={Object {}}
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      useTouch={false}
                                      value={100}
                                    >
                                      <div
                                        className="ant-input-number"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-input-number-handler-wrap"
                                        >
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Increase Value"
                                            className="ant-input-number-handler ant-input-number-handler-up "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Decrease Value"
                                            className="ant-input-number-handler ant-input-number-handler-down "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                        </div>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={0}
                                            aria-valuenow={100}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="catalogs_create_price"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseUp={[Function]}
                                            placeholder="Ex. 1999"
                                            required={false}
                                            role="spinbutton"
                                            step={1}
                                            value="100"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </InputNumber>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Products"
              name="product_ids"
              rules={
                Array [
                  Object {
                    "message": "Please select atleast one tag!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Products"
                messageVariables={
                  Object {
                    "label": "Products",
                  }
                }
                name="product_ids"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select atleast one tag!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_product_ids"
                  label="Products"
                  messageVariables={
                    Object {
                      "label": "Products",
                    }
                  }
                  name={
                    Array [
                      "product_ids",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select atleast one tag!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_product_ids"
                        label="Products"
                        name="product_ids"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_product_ids"
                              title="Products"
                            >
                              Products
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Products"
                        name={
                          Array [
                            "product_ids",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Selector
                                    action="Products"
                                    field="title"
                                    id="catalogs_create_product_ids"
                                    multiple={true}
                                    onChange={[Function]}
                                  >
                                    <Select
                                      bordered={true}
                                      choiceTransitionName="zoom"
                                      defaultValue={Array []}
                                      filterOption={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      mode="multiple"
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      placeholder="Add products"
                                      transitionName="slide-up"
                                    >
                                      <Select
                                        choiceTransitionName="zoom"
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={Array []}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={32}
                                        loading={false}
                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                        mode="multiple"
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add products"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        transitionName="slide-up"
                                      >
                                        <ForwardRef(Select)
                                          choiceTransitionName="zoom"
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={32}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add products"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <div
                                            className="ant-select ant-select-multiple ant-select-show-search"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  itemHeight={32}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={Set {}}
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      itemHeight={32}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName="zoom"
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={Array []}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                          style="width: 0px;"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />
                                                          <span
                                                            aria-hidden="true"
                                                            class="ant-select-selection-search-mirror"
                                                          >
                                                            
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        >
                                                          Add products
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={32}
                                                  loading={false}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  mode="multiple"
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Add products"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={true}
                                                  transitionName="slide-up"
                                                  values={Array []}
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      choiceTransitionName="zoom"
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                              style="width: 0px;"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                class="ant-select-selection-search-mirror"
                                                              >
                                                                
                                                                 
                                                              </span>
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              Add products
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={32}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Add products"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <CSSMotionList
                                                        component={false}
                                                        keys={Array []}
                                                        motionAppear={false}
                                                        motionName="zoom"
                                                      />
                                                      <span
                                                        className="ant-select-selection-search"
                                                        style={
                                                          Object {
                                                            "width": 0,
                                                          }
                                                        }
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="undefined_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="undefined_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="undefined_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            value=""
                                                          />
                                                        </Input>
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-selection-search-mirror"
                                                        >
                                                           
                                                        </span>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-placeholder"
                                                      >
                                                        Add products
                                                      </span>
                                                    </SelectSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </Select>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Published date"
              name="published_date"
              rules={
                Array [
                  Object {
                    "message": "Please select date of publishing!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Published date"
                messageVariables={
                  Object {
                    "label": "Published date",
                  }
                }
                name="published_date"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select date of publishing!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_published_date"
                  label="Published date"
                  messageVariables={
                    Object {
                      "label": "Published date",
                    }
                  }
                  name={
                    Array [
                      "published_date",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select date of publishing!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_published_date"
                        label="Published date"
                        name="published_date"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_published_date"
                              title="Published date"
                            >
                              Published date
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Published date"
                        name={
                          Array [
                            "published_date",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={"2020-12-12T00:00:00.000Z"}
                                >
                                  <Picker
                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                    id="catalogs_create_published_date"
                                    onChange={[Function]}
                                    value={"2020-12-12T00:00:00.000Z"}
                                  >
                                    <LocaleReceiver
                                      componentName="DatePicker"
                                      defaultLocale={[Function]}
                                    >
                                      <Picker
                                        allowClear={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        components={
                                          Object {
                                            "button": [Function],
                                            "rangeItem": [Function],
                                          }
                                        }
                                        format="YYYY-MM-DDTHH:mm:ssZ"
                                        generateConfig={
                                          Object {
                                            "addDate": [Function],
                                            "addMonth": [Function],
                                            "addYear": [Function],
                                            "getDate": [Function],
                                            "getHour": [Function],
                                            "getMinute": [Function],
                                            "getMonth": [Function],
                                            "getNow": [Function],
                                            "getSecond": [Function],
                                            "getWeekDay": [Function],
                                            "getYear": [Function],
                                            "isAfter": [Function],
                                            "isValidate": [Function],
                                            "locale": Object {
                                              "format": [Function],
                                              "getShortMonths": [Function],
                                              "getShortWeekDays": [Function],
                                              "getWeek": [Function],
                                              "getWeekFirstDay": [Function],
                                              "parse": [Function],
                                            },
                                            "setDate": [Function],
                                            "setHour": [Function],
                                            "setMinute": [Function],
                                            "setMonth": [Function],
                                            "setSecond": [Function],
                                            "setYear": [Function],
                                          }
                                        }
                                        id="catalogs_create_published_date"
                                        locale={
                                          Object {
                                            "backToToday": "Back to today",
                                            "clear": "Clear",
                                            "dateFormat": "M/D/YYYY",
                                            "dateSelect": "select date",
                                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                            "dayFormat": "D",
                                            "decadeSelect": "Choose a decade",
                                            "locale": "en_US",
                                            "month": "Month",
                                            "monthBeforeYear": true,
                                            "monthPlaceholder": "Select month",
                                            "monthSelect": "Choose a month",
                                            "nextCentury": "Next century",
                                            "nextDecade": "Next decade",
                                            "nextMonth": "Next month (PageDown)",
                                            "nextYear": "Next year (Control + right)",
                                            "now": "Now",
                                            "ok": "Ok",
                                            "placeholder": "Select date",
                                            "previousCentury": "Last century",
                                            "previousDecade": "Last decade",
                                            "previousMonth": "Previous month (PageUp)",
                                            "previousYear": "Last year (Control + left)",
                                            "quarterPlaceholder": "Select quarter",
                                            "rangeMonthPlaceholder": Array [
                                              "Start month",
                                              "End month",
                                            ],
                                            "rangePlaceholder": Array [
                                              "Start date",
                                              "End date",
                                            ],
                                            "rangeWeekPlaceholder": Array [
                                              "Start week",
                                              "End week",
                                            ],
                                            "rangeYearPlaceholder": Array [
                                              "Start year",
                                              "End year",
                                            ],
                                            "timeSelect": "select time",
                                            "today": "Today",
                                            "weekPlaceholder": "Select week",
                                            "weekSelect": "Choose a week",
                                            "year": "Year",
                                            "yearFormat": "YYYY",
                                            "yearPlaceholder": "Select year",
                                            "yearSelect": "Choose a year",
                                          }
                                        }
                                        nextIcon={
                                          <span
                                            className="ant-picker-next-icon"
                                          />
                                        }
                                        onChange={[Function]}
                                        placeholder="Select date"
                                        prefixCls="ant-picker"
                                        prevIcon={
                                          <span
                                            className="ant-picker-prev-icon"
                                          />
                                        }
                                        showToday={true}
                                        suffixIcon={<ForwardRef(CalendarOutlined) />}
                                        superNextIcon={
                                          <span
                                            className="ant-picker-super-next-icon"
                                          />
                                        }
                                        superPrevIcon={
                                          <span
                                            className="ant-picker-super-prev-icon"
                                          />
                                        }
                                        transitionName="slide-up"
                                        value={"2020-12-12T00:00:00.000Z"}
                                      >
                                        <InnerPicker
                                          allowClear={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          components={
                                            Object {
                                              "button": [Function],
                                              "rangeItem": [Function],
                                            }
                                          }
                                          format="YYYY-MM-DDTHH:mm:ssZ"
                                          generateConfig={
                                            Object {
                                              "addDate": [Function],
                                              "addMonth": [Function],
                                              "addYear": [Function],
                                              "getDate": [Function],
                                              "getHour": [Function],
                                              "getMinute": [Function],
                                              "getMonth": [Function],
                                              "getNow": [Function],
                                              "getSecond": [Function],
                                              "getWeekDay": [Function],
                                              "getYear": [Function],
                                              "isAfter": [Function],
                                              "isValidate": [Function],
                                              "locale": Object {
                                                "format": [Function],
                                                "getShortMonths": [Function],
                                                "getShortWeekDays": [Function],
                                                "getWeek": [Function],
                                                "getWeekFirstDay": [Function],
                                                "parse": [Function],
                                              },
                                              "setDate": [Function],
                                              "setHour": [Function],
                                              "setMinute": [Function],
                                              "setMonth": [Function],
                                              "setSecond": [Function],
                                              "setYear": [Function],
                                            }
                                          }
                                          id="catalogs_create_published_date"
                                          locale={
                                            Object {
                                              "backToToday": "Back to today",
                                              "clear": "Clear",
                                              "dateFormat": "M/D/YYYY",
                                              "dateSelect": "select date",
                                              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                              "dayFormat": "D",
                                              "decadeSelect": "Choose a decade",
                                              "locale": "en_US",
                                              "month": "Month",
                                              "monthBeforeYear": true,
                                              "monthPlaceholder": "Select month",
                                              "monthSelect": "Choose a month",
                                              "nextCentury": "Next century",
                                              "nextDecade": "Next decade",
                                              "nextMonth": "Next month (PageDown)",
                                              "nextYear": "Next year (Control + right)",
                                              "now": "Now",
                                              "ok": "Ok",
                                              "placeholder": "Select date",
                                              "previousCentury": "Last century",
                                              "previousDecade": "Last decade",
                                              "previousMonth": "Previous month (PageUp)",
                                              "previousYear": "Last year (Control + left)",
                                              "quarterPlaceholder": "Select quarter",
                                              "rangeMonthPlaceholder": Array [
                                                "Start month",
                                                "End month",
                                              ],
                                              "rangePlaceholder": Array [
                                                "Start date",
                                                "End date",
                                              ],
                                              "rangeWeekPlaceholder": Array [
                                                "Start week",
                                                "End week",
                                              ],
                                              "rangeYearPlaceholder": Array [
                                                "Start year",
                                                "End year",
                                              ],
                                              "timeSelect": "select time",
                                              "today": "Today",
                                              "weekPlaceholder": "Select week",
                                              "weekSelect": "Choose a week",
                                              "year": "Year",
                                              "yearFormat": "YYYY",
                                              "yearPlaceholder": "Select year",
                                              "yearSelect": "Choose a year",
                                            }
                                          }
                                          nextIcon={
                                            <span
                                              className="ant-picker-next-icon"
                                            />
                                          }
                                          onChange={[Function]}
                                          pickerRef={
                                            Object {
                                              "current": Object {
                                                "blur": [Function],
                                                "focus": [Function],
                                              },
                                            }
                                          }
                                          placeholder="Select date"
                                          prefixCls="ant-picker"
                                          prevIcon={
                                            <span
                                              className="ant-picker-prev-icon"
                                            />
                                          }
                                          showToday={true}
                                          suffixIcon={<ForwardRef(CalendarOutlined) />}
                                          superNextIcon={
                                            <span
                                              className="ant-picker-super-next-icon"
                                            />
                                          }
                                          superPrevIcon={
                                            <span
                                              className="ant-picker-super-prev-icon"
                                            />
                                          }
                                          transitionName="slide-up"
                                          value={"2020-12-12T00:00:00.000Z"}
                                        >
                                          <PickerTrigger
                                            popupElement={
                                              <div
                                                className="ant-picker-panel-container"
                                                onMouseDown={[Function]}
                                              >
                                                <PickerPanel
                                                  allowClear={true}
                                                  className="ant-picker-panel-focused"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  components={
                                                    Object {
                                                      "button": [Function],
                                                      "rangeItem": [Function],
                                                    }
                                                  }
                                                  format="YYYY-MM-DDTHH:mm:ssZ"
                                                  generateConfig={
                                                    Object {
                                                      "addDate": [Function],
                                                      "addMonth": [Function],
                                                      "addYear": [Function],
                                                      "getDate": [Function],
                                                      "getHour": [Function],
                                                      "getMinute": [Function],
                                                      "getMonth": [Function],
                                                      "getNow": [Function],
                                                      "getSecond": [Function],
                                                      "getWeekDay": [Function],
                                                      "getYear": [Function],
                                                      "isAfter": [Function],
                                                      "isValidate": [Function],
                                                      "locale": Object {
                                                        "format": [Function],
                                                        "getShortMonths": [Function],
                                                        "getShortWeekDays": [Function],
                                                        "getWeek": [Function],
                                                        "getWeekFirstDay": [Function],
                                                        "parse": [Function],
                                                      },
                                                      "setDate": [Function],
                                                      "setHour": [Function],
                                                      "setMinute": [Function],
                                                      "setMonth": [Function],
                                                      "setSecond": [Function],
                                                      "setYear": [Function],
                                                    }
                                                  }
                                                  id="catalogs_create_published_date"
                                                  locale={
                                                    Object {
                                                      "backToToday": "Back to today",
                                                      "clear": "Clear",
                                                      "dateFormat": "M/D/YYYY",
                                                      "dateSelect": "select date",
                                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                      "dayFormat": "D",
                                                      "decadeSelect": "Choose a decade",
                                                      "locale": "en_US",
                                                      "month": "Month",
                                                      "monthBeforeYear": true,
                                                      "monthPlaceholder": "Select month",
                                                      "monthSelect": "Choose a month",
                                                      "nextCentury": "Next century",
                                                      "nextDecade": "Next decade",
                                                      "nextMonth": "Next month (PageDown)",
                                                      "nextYear": "Next year (Control + right)",
                                                      "now": "Now",
                                                      "ok": "Ok",
                                                      "placeholder": "Select date",
                                                      "previousCentury": "Last century",
                                                      "previousDecade": "Last decade",
                                                      "previousMonth": "Previous month (PageUp)",
                                                      "previousYear": "Last year (Control + left)",
                                                      "quarterPlaceholder": "Select quarter",
                                                      "rangeMonthPlaceholder": Array [
                                                        "Start month",
                                                        "End month",
                                                      ],
                                                      "rangePlaceholder": Array [
                                                        "Start date",
                                                        "End date",
                                                      ],
                                                      "rangeWeekPlaceholder": Array [
                                                        "Start week",
                                                        "End week",
                                                      ],
                                                      "rangeYearPlaceholder": Array [
                                                        "Start year",
                                                        "End year",
                                                      ],
                                                      "timeSelect": "select time",
                                                      "today": "Today",
                                                      "weekPlaceholder": "Select week",
                                                      "weekSelect": "Choose a week",
                                                      "year": "Year",
                                                      "yearFormat": "YYYY",
                                                      "yearPlaceholder": "Select year",
                                                      "yearSelect": "Choose a year",
                                                    }
                                                  }
                                                  nextIcon={
                                                    <span
                                                      className="ant-picker-next-icon"
                                                    />
                                                  }
                                                  onChange={[Function]}
                                                  pickerRef={
                                                    Object {
                                                      "current": Object {
                                                        "blur": [Function],
                                                        "focus": [Function],
                                                      },
                                                    }
                                                  }
                                                  placeholder="Select date"
                                                  prefixCls="ant-picker"
                                                  prevIcon={
                                                    <span
                                                      className="ant-picker-prev-icon"
                                                    />
                                                  }
                                                  showToday={true}
                                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                  superNextIcon={
                                                    <span
                                                      className="ant-picker-super-next-icon"
                                                    />
                                                  }
                                                  superPrevIcon={
                                                    <span
                                                      className="ant-picker-super-prev-icon"
                                                    />
                                                  }
                                                  tabIndex={-1}
                                                  transitionName="slide-up"
                                                  value={"2020-12-12T00:00:00.000Z"}
                                                />
                                              </div>
                                            }
                                            popupPlacement="bottomLeft"
                                            prefixCls="ant-picker"
                                            transitionName="slide-up"
                                            visible={false}
                                          >
                                            <Trigger
                                              action={Array []}
                                              afterPopupVisibleChange={[Function]}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottomLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0}
                                              mouseLeaveDelay={0.1}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              popup={
                                                <div
                                                  className="ant-picker-panel-container"
                                                  onMouseDown={[Function]}
                                                >
                                                  <PickerPanel
                                                    allowClear={true}
                                                    className="ant-picker-panel-focused"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    components={
                                                      Object {
                                                        "button": [Function],
                                                        "rangeItem": [Function],
                                                      }
                                                    }
                                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                                    generateConfig={
                                                      Object {
                                                        "addDate": [Function],
                                                        "addMonth": [Function],
                                                        "addYear": [Function],
                                                        "getDate": [Function],
                                                        "getHour": [Function],
                                                        "getMinute": [Function],
                                                        "getMonth": [Function],
                                                        "getNow": [Function],
                                                        "getSecond": [Function],
                                                        "getWeekDay": [Function],
                                                        "getYear": [Function],
                                                        "isAfter": [Function],
                                                        "isValidate": [Function],
                                                        "locale": Object {
                                                          "format": [Function],
                                                          "getShortMonths": [Function],
                                                          "getShortWeekDays": [Function],
                                                          "getWeek": [Function],
                                                          "getWeekFirstDay": [Function],
                                                          "parse": [Function],
                                                        },
                                                        "setDate": [Function],
                                                        "setHour": [Function],
                                                        "setMinute": [Function],
                                                        "setMonth": [Function],
                                                        "setSecond": [Function],
                                                        "setYear": [Function],
                                                      }
                                                    }
                                                    id="catalogs_create_published_date"
                                                    locale={
                                                      Object {
                                                        "backToToday": "Back to today",
                                                        "clear": "Clear",
                                                        "dateFormat": "M/D/YYYY",
                                                        "dateSelect": "select date",
                                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                        "dayFormat": "D",
                                                        "decadeSelect": "Choose a decade",
                                                        "locale": "en_US",
                                                        "month": "Month",
                                                        "monthBeforeYear": true,
                                                        "monthPlaceholder": "Select month",
                                                        "monthSelect": "Choose a month",
                                                        "nextCentury": "Next century",
                                                        "nextDecade": "Next decade",
                                                        "nextMonth": "Next month (PageDown)",
                                                        "nextYear": "Next year (Control + right)",
                                                        "now": "Now",
                                                        "ok": "Ok",
                                                        "placeholder": "Select date",
                                                        "previousCentury": "Last century",
                                                        "previousDecade": "Last decade",
                                                        "previousMonth": "Previous month (PageUp)",
                                                        "previousYear": "Last year (Control + left)",
                                                        "quarterPlaceholder": "Select quarter",
                                                        "rangeMonthPlaceholder": Array [
                                                          "Start month",
                                                          "End month",
                                                        ],
                                                        "rangePlaceholder": Array [
                                                          "Start date",
                                                          "End date",
                                                        ],
                                                        "rangeWeekPlaceholder": Array [
                                                          "Start week",
                                                          "End week",
                                                        ],
                                                        "rangeYearPlaceholder": Array [
                                                          "Start year",
                                                          "End year",
                                                        ],
                                                        "timeSelect": "select time",
                                                        "today": "Today",
                                                        "weekPlaceholder": "Select week",
                                                        "weekSelect": "Choose a week",
                                                        "year": "Year",
                                                        "yearFormat": "YYYY",
                                                        "yearPlaceholder": "Select year",
                                                        "yearSelect": "Choose a year",
                                                      }
                                                    }
                                                    nextIcon={
                                                      <span
                                                        className="ant-picker-next-icon"
                                                      />
                                                    }
                                                    onChange={[Function]}
                                                    pickerRef={
                                                      Object {
                                                        "current": Object {
                                                          "blur": [Function],
                                                          "focus": [Function],
                                                        },
                                                      }
                                                    }
                                                    placeholder="Select date"
                                                    prefixCls="ant-picker"
                                                    prevIcon={
                                                      <span
                                                        className="ant-picker-prev-icon"
                                                      />
                                                    }
                                                    showToday={true}
                                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                    superNextIcon={
                                                      <span
                                                        className="ant-picker-super-next-icon"
                                                      />
                                                    }
                                                    superPrevIcon={
                                                      <span
                                                        className="ant-picker-super-prev-icon"
                                                      />
                                                    }
                                                    tabIndex={-1}
                                                    transitionName="slide-up"
                                                    value={"2020-12-12T00:00:00.000Z"}
                                                  />
                                                </div>
                                              }
                                              popupAlign={Object {}}
                                              popupClassName=""
                                              popupPlacement="bottomLeft"
                                              popupStyle={Object {}}
                                              popupTransitionName="slide-up"
                                              popupVisible={false}
                                              prefixCls="ant-picker-dropdown"
                                              showAction={Array []}
                                            >
                                              <div
                                                className="ant-picker"
                                                key="trigger"
                                                onMouseUp={[Function]}
                                              >
                                                <div
                                                  className="ant-picker-input"
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    placeholder="Select date"
                                                    readOnly={true}
                                                    size={22}
                                                    title=""
                                                    value=""
                                                  />
                                                  <span
                                                    className="ant-picker-suffix"
                                                  >
                                                    <ForwardRef(CalendarOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "calendar",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="calendar"
                                                          className="anticon anticon-calendar"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "calendar",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="calendar"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-calendar"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                                key="svg-calendar-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CalendarOutlined)>
                                                  </span>
                                                  <span
                                                    className="ant-picker-clear"
                                                    onMouseDown={[Function]}
                                                    onMouseUp={[Function]}
                                                  >
                                                    <ForwardRef(CloseCircleFilled)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="close-circle"
                                                          className="anticon anticon-close-circle"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="close-circle"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-close-circle"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                key="svg-close-circle-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CloseCircleFilled)>
                                                  </span>
                                                </div>
                                              </div>
                                            </Trigger>
                                          </PickerTrigger>
                                        </InnerPicker>
                                      </Picker>
                                    </LocaleReceiver>
                                  </Picker>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 6,
                  "span": 12,
                }
              }
            >
              <Row
                className="ant-form-item"
                gutter={0}
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={6}
                      span={12}
                    >
                      <div
                        className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Button
                              block={false}
                              ghost={false}
                              htmlType="submit"
                              loading={false}
                              type="primary"
                            >
                              <Wave>
                                <button
                                  className="ant-btn ant-btn-primary"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <LoadingIcon
                                    existIcon={false}
                                    loading={false}
                                    prefixCls="ant-btn"
                                  >
                                    <ForwardRef
                                      motionName="ant-btn-loading-icon-motion"
                                      onAppearActive={[Function]}
                                      onAppearStart={[Function]}
                                      onEnterActive={[Function]}
                                      onEnterStart={[Function]}
                                      onLeaveActive={[Function]}
                                      onLeaveStart={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <CSSMotion
                                        internalRef={null}
                                        motionAppear={true}
                                        motionEnter={true}
                                        motionLeave={true}
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      />
                                    </ForwardRef>
                                  </LoadingIcon>
                                  <span
                                    key=".0"
                                  >
                                    Submit
                                  </span>
                                </button>
                              </Wave>
                            </Button>
                          </div>
                        </div>
                        <ForwardRef
                          motionAppear={true}
                          motionName="show-help"
                          onLeaveEnd={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <CSSMotion
                            internalRef={null}
                            motionAppear={true}
                            motionEnter={true}
                            motionLeave={true}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          />
                        </ForwardRef>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CatalogCreateForm>
</Provider>
`;

exports[`Catalogs Create Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CatalogCreateForm
    data={
      Object {
        "description": "description",
        "price": 100,
        "products": Array [],
        "published_date": "2020-12-12T00:00:00.000Z",
        "title": "title",
      }
    }
    onSubmit={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      initialValues={
        Object {
          "description": "description",
          "price": 100,
          "products": Array [],
          "published_date": "2020-12-12T00:00:00.000Z",
          "title": "title",
        }
      }
      labelCol={
        Object {
          "span": 6,
        }
      }
      name="catalogs_create"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 14,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "name": "catalogs_create",
              },
              "getFieldError": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="catalogs_create"
          initialValues={
            Object {
              "description": "description",
              "price": 100,
              "products": Array [],
              "published_date": "2020-12-12T00:00:00.000Z",
              "title": "title",
            }
          }
          name="catalogs_create"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="catalogs_create"
            onSubmit={[Function]}
          >
            <FormItem
              label="Title"
              name="title"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog name!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Title"
                messageVariables={
                  Object {
                    "label": "Title",
                  }
                }
                name="title"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog name!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_title"
                  label="Title"
                  messageVariables={
                    Object {
                      "label": "Title",
                    }
                  }
                  name={
                    Array [
                      "title",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog name!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_title"
                        label="Title"
                        name="title"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_title"
                              title="Title"
                            >
                              Title
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Title"
                        name={
                          Array [
                            "title",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value="title"
                                >
                                  <Input
                                    id="catalogs_create_title"
                                    onChange={[Function]}
                                    placeholder="Ex. Cricket"
                                    type="text"
                                    value="title"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_title"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Cricket"
                                          type="text"
                                          value="title"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_title"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value="title"
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_title"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Cricket"
                                        type="text"
                                        value="title"
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Description"
              name="description"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog description!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Description"
                messageVariables={
                  Object {
                    "label": "Description",
                  }
                }
                name="description"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog description!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_description"
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name={
                    Array [
                      "description",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog description!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_description"
                        label="Description"
                        name="description"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_description"
                              title="Description"
                            >
                              Description
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Description"
                        name={
                          Array [
                            "description",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value="description"
                                >
                                  <Input
                                    id="catalogs_create_description"
                                    onChange={[Function]}
                                    placeholder="Ex. Package of datasets of Indian cricket"
                                    type="text"
                                    value="description"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Package of datasets of Indian cricket"
                                          type="text"
                                          value="description"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_description"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Package of datasets of Indian cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value="description"
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_description"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Package of datasets of Indian cricket"
                                        type="text"
                                        value="description"
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Price"
              name="price"
              rules={
                Array [
                  Object {
                    "message": "Please enter price!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Price"
                messageVariables={
                  Object {
                    "label": "Price",
                  }
                }
                name="price"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_price"
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name={
                    Array [
                      "price",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_price"
                        label="Price"
                        name="price"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_price"
                              title="Price"
                            >
                              Price
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Price"
                        name={
                          Array [
                            "price",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={100}
                                >
                                  <InputNumber
                                    id="catalogs_create_price"
                                    min={0}
                                    onChange={[Function]}
                                    placeholder="Ex. 1999"
                                    step={1}
                                    value={100}
                                  >
                                    <InputNumber
                                      autoComplete="off"
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      focusOnUpDown={true}
                                      id="catalogs_create_price"
                                      min={0}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPressEnter={[Function]}
                                      parser={[Function]}
                                      placeholder="Ex. 1999"
                                      prefixCls="ant-input-number"
                                      required={false}
                                      step={1}
                                      style={Object {}}
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      useTouch={false}
                                      value={100}
                                    >
                                      <div
                                        className="ant-input-number"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-input-number-handler-wrap"
                                        >
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Increase Value"
                                            className="ant-input-number-handler ant-input-number-handler-up "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Decrease Value"
                                            className="ant-input-number-handler ant-input-number-handler-down "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                        </div>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={0}
                                            aria-valuenow={100}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="catalogs_create_price"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseUp={[Function]}
                                            placeholder="Ex. 1999"
                                            required={false}
                                            role="spinbutton"
                                            step={1}
                                            value="100"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </InputNumber>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Products"
              name="product_ids"
              rules={
                Array [
                  Object {
                    "message": "Please select atleast one tag!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Products"
                messageVariables={
                  Object {
                    "label": "Products",
                  }
                }
                name="product_ids"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select atleast one tag!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_product_ids"
                  label="Products"
                  messageVariables={
                    Object {
                      "label": "Products",
                    }
                  }
                  name={
                    Array [
                      "product_ids",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select atleast one tag!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_product_ids"
                        label="Products"
                        name="product_ids"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_product_ids"
                              title="Products"
                            >
                              Products
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Products"
                        name={
                          Array [
                            "product_ids",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Selector
                                    action="Products"
                                    field="title"
                                    id="catalogs_create_product_ids"
                                    multiple={true}
                                    onChange={[Function]}
                                  >
                                    <Select
                                      bordered={true}
                                      choiceTransitionName="zoom"
                                      defaultValue={Array []}
                                      filterOption={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      mode="multiple"
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      placeholder="Add products"
                                      transitionName="slide-up"
                                    >
                                      <Select
                                        choiceTransitionName="zoom"
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={Array []}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={32}
                                        loading={false}
                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                        mode="multiple"
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add products"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        transitionName="slide-up"
                                      >
                                        <ForwardRef(Select)
                                          choiceTransitionName="zoom"
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={32}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add products"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <div
                                            className="ant-select ant-select-multiple ant-select-show-search"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  itemHeight={32}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={Set {}}
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      itemHeight={32}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName="zoom"
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={Array []}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                          style="width: 0px;"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />
                                                          <span
                                                            aria-hidden="true"
                                                            class="ant-select-selection-search-mirror"
                                                          >
                                                            
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        >
                                                          Add products
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={32}
                                                  loading={false}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  mode="multiple"
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Add products"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={true}
                                                  transitionName="slide-up"
                                                  values={Array []}
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      choiceTransitionName="zoom"
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                              style="width: 0px;"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                class="ant-select-selection-search-mirror"
                                                              >
                                                                
                                                                 
                                                              </span>
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              Add products
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={32}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Add products"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <CSSMotionList
                                                        component={false}
                                                        keys={Array []}
                                                        motionAppear={false}
                                                        motionName="zoom"
                                                      />
                                                      <span
                                                        className="ant-select-selection-search"
                                                        style={
                                                          Object {
                                                            "width": 0,
                                                          }
                                                        }
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="undefined_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="undefined_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="undefined_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            value=""
                                                          />
                                                        </Input>
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-selection-search-mirror"
                                                        >
                                                           
                                                        </span>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-placeholder"
                                                      >
                                                        Add products
                                                      </span>
                                                    </SelectSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </Select>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Published date"
              name="published_date"
              rules={
                Array [
                  Object {
                    "message": "Please select date of publishing!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Published date"
                messageVariables={
                  Object {
                    "label": "Published date",
                  }
                }
                name="published_date"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select date of publishing!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_published_date"
                  label="Published date"
                  messageVariables={
                    Object {
                      "label": "Published date",
                    }
                  }
                  name={
                    Array [
                      "published_date",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select date of publishing!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_published_date"
                        label="Published date"
                        name="published_date"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_published_date"
                              title="Published date"
                            >
                              Published date
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Published date"
                        name={
                          Array [
                            "published_date",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={"2020-12-12T00:00:00.000Z"}
                                >
                                  <Picker
                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                    id="catalogs_create_published_date"
                                    onChange={[Function]}
                                    value={"2020-12-12T00:00:00.000Z"}
                                  >
                                    <LocaleReceiver
                                      componentName="DatePicker"
                                      defaultLocale={[Function]}
                                    >
                                      <Picker
                                        allowClear={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        components={
                                          Object {
                                            "button": [Function],
                                            "rangeItem": [Function],
                                          }
                                        }
                                        format="YYYY-MM-DDTHH:mm:ssZ"
                                        generateConfig={
                                          Object {
                                            "addDate": [Function],
                                            "addMonth": [Function],
                                            "addYear": [Function],
                                            "getDate": [Function],
                                            "getHour": [Function],
                                            "getMinute": [Function],
                                            "getMonth": [Function],
                                            "getNow": [Function],
                                            "getSecond": [Function],
                                            "getWeekDay": [Function],
                                            "getYear": [Function],
                                            "isAfter": [Function],
                                            "isValidate": [Function],
                                            "locale": Object {
                                              "format": [Function],
                                              "getShortMonths": [Function],
                                              "getShortWeekDays": [Function],
                                              "getWeek": [Function],
                                              "getWeekFirstDay": [Function],
                                              "parse": [Function],
                                            },
                                            "setDate": [Function],
                                            "setHour": [Function],
                                            "setMinute": [Function],
                                            "setMonth": [Function],
                                            "setSecond": [Function],
                                            "setYear": [Function],
                                          }
                                        }
                                        id="catalogs_create_published_date"
                                        locale={
                                          Object {
                                            "backToToday": "Back to today",
                                            "clear": "Clear",
                                            "dateFormat": "M/D/YYYY",
                                            "dateSelect": "select date",
                                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                            "dayFormat": "D",
                                            "decadeSelect": "Choose a decade",
                                            "locale": "en_US",
                                            "month": "Month",
                                            "monthBeforeYear": true,
                                            "monthPlaceholder": "Select month",
                                            "monthSelect": "Choose a month",
                                            "nextCentury": "Next century",
                                            "nextDecade": "Next decade",
                                            "nextMonth": "Next month (PageDown)",
                                            "nextYear": "Next year (Control + right)",
                                            "now": "Now",
                                            "ok": "Ok",
                                            "placeholder": "Select date",
                                            "previousCentury": "Last century",
                                            "previousDecade": "Last decade",
                                            "previousMonth": "Previous month (PageUp)",
                                            "previousYear": "Last year (Control + left)",
                                            "quarterPlaceholder": "Select quarter",
                                            "rangeMonthPlaceholder": Array [
                                              "Start month",
                                              "End month",
                                            ],
                                            "rangePlaceholder": Array [
                                              "Start date",
                                              "End date",
                                            ],
                                            "rangeWeekPlaceholder": Array [
                                              "Start week",
                                              "End week",
                                            ],
                                            "rangeYearPlaceholder": Array [
                                              "Start year",
                                              "End year",
                                            ],
                                            "timeSelect": "select time",
                                            "today": "Today",
                                            "weekPlaceholder": "Select week",
                                            "weekSelect": "Choose a week",
                                            "year": "Year",
                                            "yearFormat": "YYYY",
                                            "yearPlaceholder": "Select year",
                                            "yearSelect": "Choose a year",
                                          }
                                        }
                                        nextIcon={
                                          <span
                                            className="ant-picker-next-icon"
                                          />
                                        }
                                        onChange={[Function]}
                                        placeholder="Select date"
                                        prefixCls="ant-picker"
                                        prevIcon={
                                          <span
                                            className="ant-picker-prev-icon"
                                          />
                                        }
                                        showToday={true}
                                        suffixIcon={<ForwardRef(CalendarOutlined) />}
                                        superNextIcon={
                                          <span
                                            className="ant-picker-super-next-icon"
                                          />
                                        }
                                        superPrevIcon={
                                          <span
                                            className="ant-picker-super-prev-icon"
                                          />
                                        }
                                        transitionName="slide-up"
                                        value={"2020-12-12T00:00:00.000Z"}
                                      >
                                        <InnerPicker
                                          allowClear={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          components={
                                            Object {
                                              "button": [Function],
                                              "rangeItem": [Function],
                                            }
                                          }
                                          format="YYYY-MM-DDTHH:mm:ssZ"
                                          generateConfig={
                                            Object {
                                              "addDate": [Function],
                                              "addMonth": [Function],
                                              "addYear": [Function],
                                              "getDate": [Function],
                                              "getHour": [Function],
                                              "getMinute": [Function],
                                              "getMonth": [Function],
                                              "getNow": [Function],
                                              "getSecond": [Function],
                                              "getWeekDay": [Function],
                                              "getYear": [Function],
                                              "isAfter": [Function],
                                              "isValidate": [Function],
                                              "locale": Object {
                                                "format": [Function],
                                                "getShortMonths": [Function],
                                                "getShortWeekDays": [Function],
                                                "getWeek": [Function],
                                                "getWeekFirstDay": [Function],
                                                "parse": [Function],
                                              },
                                              "setDate": [Function],
                                              "setHour": [Function],
                                              "setMinute": [Function],
                                              "setMonth": [Function],
                                              "setSecond": [Function],
                                              "setYear": [Function],
                                            }
                                          }
                                          id="catalogs_create_published_date"
                                          locale={
                                            Object {
                                              "backToToday": "Back to today",
                                              "clear": "Clear",
                                              "dateFormat": "M/D/YYYY",
                                              "dateSelect": "select date",
                                              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                              "dayFormat": "D",
                                              "decadeSelect": "Choose a decade",
                                              "locale": "en_US",
                                              "month": "Month",
                                              "monthBeforeYear": true,
                                              "monthPlaceholder": "Select month",
                                              "monthSelect": "Choose a month",
                                              "nextCentury": "Next century",
                                              "nextDecade": "Next decade",
                                              "nextMonth": "Next month (PageDown)",
                                              "nextYear": "Next year (Control + right)",
                                              "now": "Now",
                                              "ok": "Ok",
                                              "placeholder": "Select date",
                                              "previousCentury": "Last century",
                                              "previousDecade": "Last decade",
                                              "previousMonth": "Previous month (PageUp)",
                                              "previousYear": "Last year (Control + left)",
                                              "quarterPlaceholder": "Select quarter",
                                              "rangeMonthPlaceholder": Array [
                                                "Start month",
                                                "End month",
                                              ],
                                              "rangePlaceholder": Array [
                                                "Start date",
                                                "End date",
                                              ],
                                              "rangeWeekPlaceholder": Array [
                                                "Start week",
                                                "End week",
                                              ],
                                              "rangeYearPlaceholder": Array [
                                                "Start year",
                                                "End year",
                                              ],
                                              "timeSelect": "select time",
                                              "today": "Today",
                                              "weekPlaceholder": "Select week",
                                              "weekSelect": "Choose a week",
                                              "year": "Year",
                                              "yearFormat": "YYYY",
                                              "yearPlaceholder": "Select year",
                                              "yearSelect": "Choose a year",
                                            }
                                          }
                                          nextIcon={
                                            <span
                                              className="ant-picker-next-icon"
                                            />
                                          }
                                          onChange={[Function]}
                                          pickerRef={
                                            Object {
                                              "current": Object {
                                                "blur": [Function],
                                                "focus": [Function],
                                              },
                                            }
                                          }
                                          placeholder="Select date"
                                          prefixCls="ant-picker"
                                          prevIcon={
                                            <span
                                              className="ant-picker-prev-icon"
                                            />
                                          }
                                          showToday={true}
                                          suffixIcon={<ForwardRef(CalendarOutlined) />}
                                          superNextIcon={
                                            <span
                                              className="ant-picker-super-next-icon"
                                            />
                                          }
                                          superPrevIcon={
                                            <span
                                              className="ant-picker-super-prev-icon"
                                            />
                                          }
                                          transitionName="slide-up"
                                          value={"2020-12-12T00:00:00.000Z"}
                                        >
                                          <PickerTrigger
                                            popupElement={
                                              <div
                                                className="ant-picker-panel-container"
                                                onMouseDown={[Function]}
                                              >
                                                <PickerPanel
                                                  allowClear={true}
                                                  className="ant-picker-panel-focused"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  components={
                                                    Object {
                                                      "button": [Function],
                                                      "rangeItem": [Function],
                                                    }
                                                  }
                                                  format="YYYY-MM-DDTHH:mm:ssZ"
                                                  generateConfig={
                                                    Object {
                                                      "addDate": [Function],
                                                      "addMonth": [Function],
                                                      "addYear": [Function],
                                                      "getDate": [Function],
                                                      "getHour": [Function],
                                                      "getMinute": [Function],
                                                      "getMonth": [Function],
                                                      "getNow": [Function],
                                                      "getSecond": [Function],
                                                      "getWeekDay": [Function],
                                                      "getYear": [Function],
                                                      "isAfter": [Function],
                                                      "isValidate": [Function],
                                                      "locale": Object {
                                                        "format": [Function],
                                                        "getShortMonths": [Function],
                                                        "getShortWeekDays": [Function],
                                                        "getWeek": [Function],
                                                        "getWeekFirstDay": [Function],
                                                        "parse": [Function],
                                                      },
                                                      "setDate": [Function],
                                                      "setHour": [Function],
                                                      "setMinute": [Function],
                                                      "setMonth": [Function],
                                                      "setSecond": [Function],
                                                      "setYear": [Function],
                                                    }
                                                  }
                                                  id="catalogs_create_published_date"
                                                  locale={
                                                    Object {
                                                      "backToToday": "Back to today",
                                                      "clear": "Clear",
                                                      "dateFormat": "M/D/YYYY",
                                                      "dateSelect": "select date",
                                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                      "dayFormat": "D",
                                                      "decadeSelect": "Choose a decade",
                                                      "locale": "en_US",
                                                      "month": "Month",
                                                      "monthBeforeYear": true,
                                                      "monthPlaceholder": "Select month",
                                                      "monthSelect": "Choose a month",
                                                      "nextCentury": "Next century",
                                                      "nextDecade": "Next decade",
                                                      "nextMonth": "Next month (PageDown)",
                                                      "nextYear": "Next year (Control + right)",
                                                      "now": "Now",
                                                      "ok": "Ok",
                                                      "placeholder": "Select date",
                                                      "previousCentury": "Last century",
                                                      "previousDecade": "Last decade",
                                                      "previousMonth": "Previous month (PageUp)",
                                                      "previousYear": "Last year (Control + left)",
                                                      "quarterPlaceholder": "Select quarter",
                                                      "rangeMonthPlaceholder": Array [
                                                        "Start month",
                                                        "End month",
                                                      ],
                                                      "rangePlaceholder": Array [
                                                        "Start date",
                                                        "End date",
                                                      ],
                                                      "rangeWeekPlaceholder": Array [
                                                        "Start week",
                                                        "End week",
                                                      ],
                                                      "rangeYearPlaceholder": Array [
                                                        "Start year",
                                                        "End year",
                                                      ],
                                                      "timeSelect": "select time",
                                                      "today": "Today",
                                                      "weekPlaceholder": "Select week",
                                                      "weekSelect": "Choose a week",
                                                      "year": "Year",
                                                      "yearFormat": "YYYY",
                                                      "yearPlaceholder": "Select year",
                                                      "yearSelect": "Choose a year",
                                                    }
                                                  }
                                                  nextIcon={
                                                    <span
                                                      className="ant-picker-next-icon"
                                                    />
                                                  }
                                                  onChange={[Function]}
                                                  pickerRef={
                                                    Object {
                                                      "current": Object {
                                                        "blur": [Function],
                                                        "focus": [Function],
                                                      },
                                                    }
                                                  }
                                                  placeholder="Select date"
                                                  prefixCls="ant-picker"
                                                  prevIcon={
                                                    <span
                                                      className="ant-picker-prev-icon"
                                                    />
                                                  }
                                                  showToday={true}
                                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                  superNextIcon={
                                                    <span
                                                      className="ant-picker-super-next-icon"
                                                    />
                                                  }
                                                  superPrevIcon={
                                                    <span
                                                      className="ant-picker-super-prev-icon"
                                                    />
                                                  }
                                                  tabIndex={-1}
                                                  transitionName="slide-up"
                                                  value={"2020-12-12T00:00:00.000Z"}
                                                />
                                              </div>
                                            }
                                            popupPlacement="bottomLeft"
                                            prefixCls="ant-picker"
                                            transitionName="slide-up"
                                            visible={false}
                                          >
                                            <Trigger
                                              action={Array []}
                                              afterPopupVisibleChange={[Function]}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottomLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0}
                                              mouseLeaveDelay={0.1}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              popup={
                                                <div
                                                  className="ant-picker-panel-container"
                                                  onMouseDown={[Function]}
                                                >
                                                  <PickerPanel
                                                    allowClear={true}
                                                    className="ant-picker-panel-focused"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    components={
                                                      Object {
                                                        "button": [Function],
                                                        "rangeItem": [Function],
                                                      }
                                                    }
                                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                                    generateConfig={
                                                      Object {
                                                        "addDate": [Function],
                                                        "addMonth": [Function],
                                                        "addYear": [Function],
                                                        "getDate": [Function],
                                                        "getHour": [Function],
                                                        "getMinute": [Function],
                                                        "getMonth": [Function],
                                                        "getNow": [Function],
                                                        "getSecond": [Function],
                                                        "getWeekDay": [Function],
                                                        "getYear": [Function],
                                                        "isAfter": [Function],
                                                        "isValidate": [Function],
                                                        "locale": Object {
                                                          "format": [Function],
                                                          "getShortMonths": [Function],
                                                          "getShortWeekDays": [Function],
                                                          "getWeek": [Function],
                                                          "getWeekFirstDay": [Function],
                                                          "parse": [Function],
                                                        },
                                                        "setDate": [Function],
                                                        "setHour": [Function],
                                                        "setMinute": [Function],
                                                        "setMonth": [Function],
                                                        "setSecond": [Function],
                                                        "setYear": [Function],
                                                      }
                                                    }
                                                    id="catalogs_create_published_date"
                                                    locale={
                                                      Object {
                                                        "backToToday": "Back to today",
                                                        "clear": "Clear",
                                                        "dateFormat": "M/D/YYYY",
                                                        "dateSelect": "select date",
                                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                        "dayFormat": "D",
                                                        "decadeSelect": "Choose a decade",
                                                        "locale": "en_US",
                                                        "month": "Month",
                                                        "monthBeforeYear": true,
                                                        "monthPlaceholder": "Select month",
                                                        "monthSelect": "Choose a month",
                                                        "nextCentury": "Next century",
                                                        "nextDecade": "Next decade",
                                                        "nextMonth": "Next month (PageDown)",
                                                        "nextYear": "Next year (Control + right)",
                                                        "now": "Now",
                                                        "ok": "Ok",
                                                        "placeholder": "Select date",
                                                        "previousCentury": "Last century",
                                                        "previousDecade": "Last decade",
                                                        "previousMonth": "Previous month (PageUp)",
                                                        "previousYear": "Last year (Control + left)",
                                                        "quarterPlaceholder": "Select quarter",
                                                        "rangeMonthPlaceholder": Array [
                                                          "Start month",
                                                          "End month",
                                                        ],
                                                        "rangePlaceholder": Array [
                                                          "Start date",
                                                          "End date",
                                                        ],
                                                        "rangeWeekPlaceholder": Array [
                                                          "Start week",
                                                          "End week",
                                                        ],
                                                        "rangeYearPlaceholder": Array [
                                                          "Start year",
                                                          "End year",
                                                        ],
                                                        "timeSelect": "select time",
                                                        "today": "Today",
                                                        "weekPlaceholder": "Select week",
                                                        "weekSelect": "Choose a week",
                                                        "year": "Year",
                                                        "yearFormat": "YYYY",
                                                        "yearPlaceholder": "Select year",
                                                        "yearSelect": "Choose a year",
                                                      }
                                                    }
                                                    nextIcon={
                                                      <span
                                                        className="ant-picker-next-icon"
                                                      />
                                                    }
                                                    onChange={[Function]}
                                                    pickerRef={
                                                      Object {
                                                        "current": Object {
                                                          "blur": [Function],
                                                          "focus": [Function],
                                                        },
                                                      }
                                                    }
                                                    placeholder="Select date"
                                                    prefixCls="ant-picker"
                                                    prevIcon={
                                                      <span
                                                        className="ant-picker-prev-icon"
                                                      />
                                                    }
                                                    showToday={true}
                                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                    superNextIcon={
                                                      <span
                                                        className="ant-picker-super-next-icon"
                                                      />
                                                    }
                                                    superPrevIcon={
                                                      <span
                                                        className="ant-picker-super-prev-icon"
                                                      />
                                                    }
                                                    tabIndex={-1}
                                                    transitionName="slide-up"
                                                    value={"2020-12-12T00:00:00.000Z"}
                                                  />
                                                </div>
                                              }
                                              popupAlign={Object {}}
                                              popupClassName=""
                                              popupPlacement="bottomLeft"
                                              popupStyle={Object {}}
                                              popupTransitionName="slide-up"
                                              popupVisible={false}
                                              prefixCls="ant-picker-dropdown"
                                              showAction={Array []}
                                            >
                                              <div
                                                className="ant-picker"
                                                key="trigger"
                                                onMouseUp={[Function]}
                                              >
                                                <div
                                                  className="ant-picker-input"
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    placeholder="Select date"
                                                    readOnly={true}
                                                    size={22}
                                                    title=""
                                                    value=""
                                                  />
                                                  <span
                                                    className="ant-picker-suffix"
                                                  >
                                                    <ForwardRef(CalendarOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "calendar",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="calendar"
                                                          className="anticon anticon-calendar"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "calendar",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="calendar"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-calendar"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                                key="svg-calendar-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CalendarOutlined)>
                                                  </span>
                                                  <span
                                                    className="ant-picker-clear"
                                                    onMouseDown={[Function]}
                                                    onMouseUp={[Function]}
                                                  >
                                                    <ForwardRef(CloseCircleFilled)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="close-circle"
                                                          className="anticon anticon-close-circle"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="close-circle"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-close-circle"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                key="svg-close-circle-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CloseCircleFilled)>
                                                  </span>
                                                </div>
                                              </div>
                                            </Trigger>
                                          </PickerTrigger>
                                        </InnerPicker>
                                      </Picker>
                                    </LocaleReceiver>
                                  </Picker>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 6,
                  "span": 12,
                }
              }
            >
              <Row
                className="ant-form-item"
                gutter={0}
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={6}
                      span={12}
                    >
                      <div
                        className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Button
                              block={false}
                              ghost={false}
                              htmlType="submit"
                              loading={false}
                              type="primary"
                            >
                              <Wave>
                                <button
                                  className="ant-btn ant-btn-primary"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <LoadingIcon
                                    existIcon={false}
                                    loading={false}
                                    prefixCls="ant-btn"
                                  >
                                    <ForwardRef
                                      motionName="ant-btn-loading-icon-motion"
                                      onAppearActive={[Function]}
                                      onAppearStart={[Function]}
                                      onEnterActive={[Function]}
                                      onEnterStart={[Function]}
                                      onLeaveActive={[Function]}
                                      onLeaveStart={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <CSSMotion
                                        internalRef={null}
                                        motionAppear={true}
                                        motionEnter={true}
                                        motionLeave={true}
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      />
                                    </ForwardRef>
                                  </LoadingIcon>
                                  <span
                                    key=".0"
                                  >
                                    Submit
                                  </span>
                                </button>
                              </Wave>
                            </Button>
                          </div>
                        </div>
                        <ForwardRef
                          motionAppear={true}
                          motionName="show-help"
                          onLeaveEnd={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <CSSMotion
                            internalRef={null}
                            motionAppear={true}
                            motionEnter={true}
                            motionLeave={true}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          />
                        </ForwardRef>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CatalogCreateForm>
</Provider>
`;

exports[`Catalogs Create Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CatalogCreateForm>
    <ForwardRef(InternalForm)
      initialValues={Object {}}
      labelCol={
        Object {
          "span": 6,
        }
      }
      name="catalogs_create"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 14,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "name": "catalogs_create",
              },
              "getFieldError": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="catalogs_create"
          initialValues={Object {}}
          name="catalogs_create"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="catalogs_create"
            onSubmit={[Function]}
          >
            <FormItem
              label="Title"
              name="title"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog name!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Title"
                messageVariables={
                  Object {
                    "label": "Title",
                  }
                }
                name="title"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog name!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_title"
                  label="Title"
                  messageVariables={
                    Object {
                      "label": "Title",
                    }
                  }
                  name={
                    Array [
                      "title",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog name!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_title"
                        label="Title"
                        name="title"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_title"
                              title="Title"
                            >
                              Title
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Title"
                        name={
                          Array [
                            "title",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog name!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Input
                                    id="catalogs_create_title"
                                    onChange={[Function]}
                                    placeholder="Ex. Cricket"
                                    type="text"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_title"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Cricket"
                                          type="text"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_title"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value=""
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_title"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Cricket"
                                        type="text"
                                        value=""
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Description"
              name="description"
              rules={
                Array [
                  Object {
                    "message": "Please enter catalog description!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Description"
                messageVariables={
                  Object {
                    "label": "Description",
                  }
                }
                name="description"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog description!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_description"
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name={
                    Array [
                      "description",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog description!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_description"
                        label="Description"
                        name="description"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_description"
                              title="Description"
                            >
                              Description
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Description"
                        name={
                          Array [
                            "description",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter catalog description!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Input
                                    id="catalogs_create_description"
                                    onChange={[Function]}
                                    placeholder="Ex. Package of datasets of Indian cricket"
                                    type="text"
                                  >
                                    <ClearableLabeledInput
                                      element={
                                        <input
                                          className="ant-input"
                                          id="catalogs_create_description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Package of datasets of Indian cricket"
                                          type="text"
                                        />
                                      }
                                      focused={false}
                                      handleReset={[Function]}
                                      id="catalogs_create_description"
                                      inputType="input"
                                      onChange={[Function]}
                                      placeholder="Ex. Package of datasets of Indian cricket"
                                      prefixCls="ant-input"
                                      triggerFocus={[Function]}
                                      type="text"
                                      value=""
                                    >
                                      <input
                                        className="ant-input"
                                        id="catalogs_create_description"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Ex. Package of datasets of Indian cricket"
                                        type="text"
                                        value=""
                                      />
                                    </ClearableLabeledInput>
                                  </Input>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Price"
              name="price"
              rules={
                Array [
                  Object {
                    "message": "Please enter price!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Price"
                messageVariables={
                  Object {
                    "label": "Price",
                  }
                }
                name="price"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_price"
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name={
                    Array [
                      "price",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_price"
                        label="Price"
                        name="price"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_price"
                              title="Price"
                            >
                              Price
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Price"
                        name={
                          Array [
                            "price",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter price!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <InputNumber
                                    id="catalogs_create_price"
                                    min={0}
                                    onChange={[Function]}
                                    placeholder="Ex. 1999"
                                    step={1}
                                  >
                                    <InputNumber
                                      autoComplete="off"
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      focusOnUpDown={true}
                                      id="catalogs_create_price"
                                      min={0}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPressEnter={[Function]}
                                      parser={[Function]}
                                      placeholder="Ex. 1999"
                                      prefixCls="ant-input-number"
                                      required={false}
                                      step={1}
                                      style={Object {}}
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      useTouch={false}
                                    >
                                      <div
                                        className="ant-input-number"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-input-number-handler-wrap"
                                        >
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Increase Value"
                                            className="ant-input-number-handler ant-input-number-handler-up "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                          <InputHandler
                                            aria-disabled={false}
                                            aria-label="Decrease Value"
                                            className="ant-input-number-handler ant-input-number-handler-down "
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            prefixCls="ant-input-number"
                                            role="button"
                                            unselectable="unselectable"
                                          >
                                            <TouchFeedback
                                              activeClassName="ant-input-number-handler-active"
                                              disabled={false}
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down "
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchCancel={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                unselectable="unselectable"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TouchFeedback>
                                          </InputHandler>
                                        </div>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={0}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="catalogs_create_price"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseUp={[Function]}
                                            placeholder="Ex. 1999"
                                            required={false}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </InputNumber>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Products"
              name="product_ids"
              rules={
                Array [
                  Object {
                    "message": "Please select atleast one tag!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Products"
                messageVariables={
                  Object {
                    "label": "Products",
                  }
                }
                name="product_ids"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select atleast one tag!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_product_ids"
                  label="Products"
                  messageVariables={
                    Object {
                      "label": "Products",
                    }
                  }
                  name={
                    Array [
                      "product_ids",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select atleast one tag!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_product_ids"
                        label="Products"
                        name="product_ids"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_product_ids"
                              title="Products"
                            >
                              Products
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Products"
                        name={
                          Array [
                            "product_ids",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select atleast one tag!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Selector
                                    action="Products"
                                    field="title"
                                    id="catalogs_create_product_ids"
                                    multiple={true}
                                    onChange={[Function]}
                                  >
                                    <Select
                                      bordered={true}
                                      choiceTransitionName="zoom"
                                      defaultValue={Array []}
                                      filterOption={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      mode="multiple"
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      placeholder="Add products"
                                      transitionName="slide-up"
                                    >
                                      <Select
                                        choiceTransitionName="zoom"
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={Array []}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={32}
                                        loading={false}
                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                        mode="multiple"
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add products"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        transitionName="slide-up"
                                      >
                                        <ForwardRef(Select)
                                          choiceTransitionName="zoom"
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={32}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add products"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <div
                                            className="ant-select ant-select-multiple ant-select-show-search"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  itemHeight={32}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={Set {}}
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      itemHeight={32}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName="zoom"
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={Array []}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                          style="width: 0px;"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />
                                                          <span
                                                            aria-hidden="true"
                                                            class="ant-select-selection-search-mirror"
                                                          >
                                                            
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        >
                                                          Add products
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={32}
                                                  loading={false}
                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                  mode="multiple"
                                                  multiple={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Add products"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={true}
                                                  transitionName="slide-up"
                                                  values={Array []}
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      choiceTransitionName="zoom"
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                              style="width: 0px;"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                class="ant-select-selection-search-mirror"
                                                              >
                                                                
                                                                 
                                                              </span>
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              Add products
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={32}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Add products"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <CSSMotionList
                                                        component={false}
                                                        keys={Array []}
                                                        motionAppear={false}
                                                        motionName="zoom"
                                                      />
                                                      <span
                                                        className="ant-select-selection-search"
                                                        style={
                                                          Object {
                                                            "width": 0,
                                                          }
                                                        }
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="undefined_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="undefined_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="undefined_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            value=""
                                                          />
                                                        </Input>
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-selection-search-mirror"
                                                        >
                                                           
                                                        </span>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-placeholder"
                                                      >
                                                        Add products
                                                      </span>
                                                    </SelectSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </Select>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Published date"
              name="published_date"
              rules={
                Array [
                  Object {
                    "message": "Please select date of publishing!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Published date"
                messageVariables={
                  Object {
                    "label": "Published date",
                  }
                }
                name="published_date"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please select date of publishing!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  key="_published_date"
                  label="Published date"
                  messageVariables={
                    Object {
                      "label": "Published date",
                    }
                  }
                  name={
                    Array [
                      "published_date",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select date of publishing!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="catalogs_create_published_date"
                        label="Published date"
                        name="published_date"
                        prefixCls="ant-form"
                        required={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={6}
                        >
                          <div
                            className="ant-col ant-col-6 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="catalogs_create_published_date"
                              title="Published date"
                            >
                              Published date
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Published date"
                        name={
                          Array [
                            "published_date",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please select date of publishing!",
                              "required": true,
                            },
                          ]
                        }
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Picker
                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                    id="catalogs_create_published_date"
                                    onChange={[Function]}
                                  >
                                    <LocaleReceiver
                                      componentName="DatePicker"
                                      defaultLocale={[Function]}
                                    >
                                      <Picker
                                        allowClear={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        components={
                                          Object {
                                            "button": [Function],
                                            "rangeItem": [Function],
                                          }
                                        }
                                        format="YYYY-MM-DDTHH:mm:ssZ"
                                        generateConfig={
                                          Object {
                                            "addDate": [Function],
                                            "addMonth": [Function],
                                            "addYear": [Function],
                                            "getDate": [Function],
                                            "getHour": [Function],
                                            "getMinute": [Function],
                                            "getMonth": [Function],
                                            "getNow": [Function],
                                            "getSecond": [Function],
                                            "getWeekDay": [Function],
                                            "getYear": [Function],
                                            "isAfter": [Function],
                                            "isValidate": [Function],
                                            "locale": Object {
                                              "format": [Function],
                                              "getShortMonths": [Function],
                                              "getShortWeekDays": [Function],
                                              "getWeek": [Function],
                                              "getWeekFirstDay": [Function],
                                              "parse": [Function],
                                            },
                                            "setDate": [Function],
                                            "setHour": [Function],
                                            "setMinute": [Function],
                                            "setMonth": [Function],
                                            "setSecond": [Function],
                                            "setYear": [Function],
                                          }
                                        }
                                        id="catalogs_create_published_date"
                                        locale={
                                          Object {
                                            "backToToday": "Back to today",
                                            "clear": "Clear",
                                            "dateFormat": "M/D/YYYY",
                                            "dateSelect": "select date",
                                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                            "dayFormat": "D",
                                            "decadeSelect": "Choose a decade",
                                            "locale": "en_US",
                                            "month": "Month",
                                            "monthBeforeYear": true,
                                            "monthPlaceholder": "Select month",
                                            "monthSelect": "Choose a month",
                                            "nextCentury": "Next century",
                                            "nextDecade": "Next decade",
                                            "nextMonth": "Next month (PageDown)",
                                            "nextYear": "Next year (Control + right)",
                                            "now": "Now",
                                            "ok": "Ok",
                                            "placeholder": "Select date",
                                            "previousCentury": "Last century",
                                            "previousDecade": "Last decade",
                                            "previousMonth": "Previous month (PageUp)",
                                            "previousYear": "Last year (Control + left)",
                                            "quarterPlaceholder": "Select quarter",
                                            "rangeMonthPlaceholder": Array [
                                              "Start month",
                                              "End month",
                                            ],
                                            "rangePlaceholder": Array [
                                              "Start date",
                                              "End date",
                                            ],
                                            "rangeWeekPlaceholder": Array [
                                              "Start week",
                                              "End week",
                                            ],
                                            "rangeYearPlaceholder": Array [
                                              "Start year",
                                              "End year",
                                            ],
                                            "timeSelect": "select time",
                                            "today": "Today",
                                            "weekPlaceholder": "Select week",
                                            "weekSelect": "Choose a week",
                                            "year": "Year",
                                            "yearFormat": "YYYY",
                                            "yearPlaceholder": "Select year",
                                            "yearSelect": "Choose a year",
                                          }
                                        }
                                        nextIcon={
                                          <span
                                            className="ant-picker-next-icon"
                                          />
                                        }
                                        onChange={[Function]}
                                        placeholder="Select date"
                                        prefixCls="ant-picker"
                                        prevIcon={
                                          <span
                                            className="ant-picker-prev-icon"
                                          />
                                        }
                                        showToday={true}
                                        suffixIcon={<ForwardRef(CalendarOutlined) />}
                                        superNextIcon={
                                          <span
                                            className="ant-picker-super-next-icon"
                                          />
                                        }
                                        superPrevIcon={
                                          <span
                                            className="ant-picker-super-prev-icon"
                                          />
                                        }
                                        transitionName="slide-up"
                                      >
                                        <InnerPicker
                                          allowClear={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          components={
                                            Object {
                                              "button": [Function],
                                              "rangeItem": [Function],
                                            }
                                          }
                                          format="YYYY-MM-DDTHH:mm:ssZ"
                                          generateConfig={
                                            Object {
                                              "addDate": [Function],
                                              "addMonth": [Function],
                                              "addYear": [Function],
                                              "getDate": [Function],
                                              "getHour": [Function],
                                              "getMinute": [Function],
                                              "getMonth": [Function],
                                              "getNow": [Function],
                                              "getSecond": [Function],
                                              "getWeekDay": [Function],
                                              "getYear": [Function],
                                              "isAfter": [Function],
                                              "isValidate": [Function],
                                              "locale": Object {
                                                "format": [Function],
                                                "getShortMonths": [Function],
                                                "getShortWeekDays": [Function],
                                                "getWeek": [Function],
                                                "getWeekFirstDay": [Function],
                                                "parse": [Function],
                                              },
                                              "setDate": [Function],
                                              "setHour": [Function],
                                              "setMinute": [Function],
                                              "setMonth": [Function],
                                              "setSecond": [Function],
                                              "setYear": [Function],
                                            }
                                          }
                                          id="catalogs_create_published_date"
                                          locale={
                                            Object {
                                              "backToToday": "Back to today",
                                              "clear": "Clear",
                                              "dateFormat": "M/D/YYYY",
                                              "dateSelect": "select date",
                                              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                              "dayFormat": "D",
                                              "decadeSelect": "Choose a decade",
                                              "locale": "en_US",
                                              "month": "Month",
                                              "monthBeforeYear": true,
                                              "monthPlaceholder": "Select month",
                                              "monthSelect": "Choose a month",
                                              "nextCentury": "Next century",
                                              "nextDecade": "Next decade",
                                              "nextMonth": "Next month (PageDown)",
                                              "nextYear": "Next year (Control + right)",
                                              "now": "Now",
                                              "ok": "Ok",
                                              "placeholder": "Select date",
                                              "previousCentury": "Last century",
                                              "previousDecade": "Last decade",
                                              "previousMonth": "Previous month (PageUp)",
                                              "previousYear": "Last year (Control + left)",
                                              "quarterPlaceholder": "Select quarter",
                                              "rangeMonthPlaceholder": Array [
                                                "Start month",
                                                "End month",
                                              ],
                                              "rangePlaceholder": Array [
                                                "Start date",
                                                "End date",
                                              ],
                                              "rangeWeekPlaceholder": Array [
                                                "Start week",
                                                "End week",
                                              ],
                                              "rangeYearPlaceholder": Array [
                                                "Start year",
                                                "End year",
                                              ],
                                              "timeSelect": "select time",
                                              "today": "Today",
                                              "weekPlaceholder": "Select week",
                                              "weekSelect": "Choose a week",
                                              "year": "Year",
                                              "yearFormat": "YYYY",
                                              "yearPlaceholder": "Select year",
                                              "yearSelect": "Choose a year",
                                            }
                                          }
                                          nextIcon={
                                            <span
                                              className="ant-picker-next-icon"
                                            />
                                          }
                                          onChange={[Function]}
                                          pickerRef={
                                            Object {
                                              "current": Object {
                                                "blur": [Function],
                                                "focus": [Function],
                                              },
                                            }
                                          }
                                          placeholder="Select date"
                                          prefixCls="ant-picker"
                                          prevIcon={
                                            <span
                                              className="ant-picker-prev-icon"
                                            />
                                          }
                                          showToday={true}
                                          suffixIcon={<ForwardRef(CalendarOutlined) />}
                                          superNextIcon={
                                            <span
                                              className="ant-picker-super-next-icon"
                                            />
                                          }
                                          superPrevIcon={
                                            <span
                                              className="ant-picker-super-prev-icon"
                                            />
                                          }
                                          transitionName="slide-up"
                                        >
                                          <PickerTrigger
                                            popupElement={
                                              <div
                                                className="ant-picker-panel-container"
                                                onMouseDown={[Function]}
                                              >
                                                <PickerPanel
                                                  allowClear={true}
                                                  className="ant-picker-panel-focused"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  components={
                                                    Object {
                                                      "button": [Function],
                                                      "rangeItem": [Function],
                                                    }
                                                  }
                                                  format="YYYY-MM-DDTHH:mm:ssZ"
                                                  generateConfig={
                                                    Object {
                                                      "addDate": [Function],
                                                      "addMonth": [Function],
                                                      "addYear": [Function],
                                                      "getDate": [Function],
                                                      "getHour": [Function],
                                                      "getMinute": [Function],
                                                      "getMonth": [Function],
                                                      "getNow": [Function],
                                                      "getSecond": [Function],
                                                      "getWeekDay": [Function],
                                                      "getYear": [Function],
                                                      "isAfter": [Function],
                                                      "isValidate": [Function],
                                                      "locale": Object {
                                                        "format": [Function],
                                                        "getShortMonths": [Function],
                                                        "getShortWeekDays": [Function],
                                                        "getWeek": [Function],
                                                        "getWeekFirstDay": [Function],
                                                        "parse": [Function],
                                                      },
                                                      "setDate": [Function],
                                                      "setHour": [Function],
                                                      "setMinute": [Function],
                                                      "setMonth": [Function],
                                                      "setSecond": [Function],
                                                      "setYear": [Function],
                                                    }
                                                  }
                                                  id="catalogs_create_published_date"
                                                  locale={
                                                    Object {
                                                      "backToToday": "Back to today",
                                                      "clear": "Clear",
                                                      "dateFormat": "M/D/YYYY",
                                                      "dateSelect": "select date",
                                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                      "dayFormat": "D",
                                                      "decadeSelect": "Choose a decade",
                                                      "locale": "en_US",
                                                      "month": "Month",
                                                      "monthBeforeYear": true,
                                                      "monthPlaceholder": "Select month",
                                                      "monthSelect": "Choose a month",
                                                      "nextCentury": "Next century",
                                                      "nextDecade": "Next decade",
                                                      "nextMonth": "Next month (PageDown)",
                                                      "nextYear": "Next year (Control + right)",
                                                      "now": "Now",
                                                      "ok": "Ok",
                                                      "placeholder": "Select date",
                                                      "previousCentury": "Last century",
                                                      "previousDecade": "Last decade",
                                                      "previousMonth": "Previous month (PageUp)",
                                                      "previousYear": "Last year (Control + left)",
                                                      "quarterPlaceholder": "Select quarter",
                                                      "rangeMonthPlaceholder": Array [
                                                        "Start month",
                                                        "End month",
                                                      ],
                                                      "rangePlaceholder": Array [
                                                        "Start date",
                                                        "End date",
                                                      ],
                                                      "rangeWeekPlaceholder": Array [
                                                        "Start week",
                                                        "End week",
                                                      ],
                                                      "rangeYearPlaceholder": Array [
                                                        "Start year",
                                                        "End year",
                                                      ],
                                                      "timeSelect": "select time",
                                                      "today": "Today",
                                                      "weekPlaceholder": "Select week",
                                                      "weekSelect": "Choose a week",
                                                      "year": "Year",
                                                      "yearFormat": "YYYY",
                                                      "yearPlaceholder": "Select year",
                                                      "yearSelect": "Choose a year",
                                                    }
                                                  }
                                                  nextIcon={
                                                    <span
                                                      className="ant-picker-next-icon"
                                                    />
                                                  }
                                                  onChange={[Function]}
                                                  pickerRef={
                                                    Object {
                                                      "current": Object {
                                                        "blur": [Function],
                                                        "focus": [Function],
                                                      },
                                                    }
                                                  }
                                                  placeholder="Select date"
                                                  prefixCls="ant-picker"
                                                  prevIcon={
                                                    <span
                                                      className="ant-picker-prev-icon"
                                                    />
                                                  }
                                                  showToday={true}
                                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                  superNextIcon={
                                                    <span
                                                      className="ant-picker-super-next-icon"
                                                    />
                                                  }
                                                  superPrevIcon={
                                                    <span
                                                      className="ant-picker-super-prev-icon"
                                                    />
                                                  }
                                                  tabIndex={-1}
                                                  transitionName="slide-up"
                                                  value={null}
                                                />
                                              </div>
                                            }
                                            popupPlacement="bottomLeft"
                                            prefixCls="ant-picker"
                                            transitionName="slide-up"
                                            visible={false}
                                          >
                                            <Trigger
                                              action={Array []}
                                              afterPopupVisibleChange={[Function]}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottomLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0}
                                              mouseLeaveDelay={0.1}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              popup={
                                                <div
                                                  className="ant-picker-panel-container"
                                                  onMouseDown={[Function]}
                                                >
                                                  <PickerPanel
                                                    allowClear={true}
                                                    className="ant-picker-panel-focused"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    components={
                                                      Object {
                                                        "button": [Function],
                                                        "rangeItem": [Function],
                                                      }
                                                    }
                                                    format="YYYY-MM-DDTHH:mm:ssZ"
                                                    generateConfig={
                                                      Object {
                                                        "addDate": [Function],
                                                        "addMonth": [Function],
                                                        "addYear": [Function],
                                                        "getDate": [Function],
                                                        "getHour": [Function],
                                                        "getMinute": [Function],
                                                        "getMonth": [Function],
                                                        "getNow": [Function],
                                                        "getSecond": [Function],
                                                        "getWeekDay": [Function],
                                                        "getYear": [Function],
                                                        "isAfter": [Function],
                                                        "isValidate": [Function],
                                                        "locale": Object {
                                                          "format": [Function],
                                                          "getShortMonths": [Function],
                                                          "getShortWeekDays": [Function],
                                                          "getWeek": [Function],
                                                          "getWeekFirstDay": [Function],
                                                          "parse": [Function],
                                                        },
                                                        "setDate": [Function],
                                                        "setHour": [Function],
                                                        "setMinute": [Function],
                                                        "setMonth": [Function],
                                                        "setSecond": [Function],
                                                        "setYear": [Function],
                                                      }
                                                    }
                                                    id="catalogs_create_published_date"
                                                    locale={
                                                      Object {
                                                        "backToToday": "Back to today",
                                                        "clear": "Clear",
                                                        "dateFormat": "M/D/YYYY",
                                                        "dateSelect": "select date",
                                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                        "dayFormat": "D",
                                                        "decadeSelect": "Choose a decade",
                                                        "locale": "en_US",
                                                        "month": "Month",
                                                        "monthBeforeYear": true,
                                                        "monthPlaceholder": "Select month",
                                                        "monthSelect": "Choose a month",
                                                        "nextCentury": "Next century",
                                                        "nextDecade": "Next decade",
                                                        "nextMonth": "Next month (PageDown)",
                                                        "nextYear": "Next year (Control + right)",
                                                        "now": "Now",
                                                        "ok": "Ok",
                                                        "placeholder": "Select date",
                                                        "previousCentury": "Last century",
                                                        "previousDecade": "Last decade",
                                                        "previousMonth": "Previous month (PageUp)",
                                                        "previousYear": "Last year (Control + left)",
                                                        "quarterPlaceholder": "Select quarter",
                                                        "rangeMonthPlaceholder": Array [
                                                          "Start month",
                                                          "End month",
                                                        ],
                                                        "rangePlaceholder": Array [
                                                          "Start date",
                                                          "End date",
                                                        ],
                                                        "rangeWeekPlaceholder": Array [
                                                          "Start week",
                                                          "End week",
                                                        ],
                                                        "rangeYearPlaceholder": Array [
                                                          "Start year",
                                                          "End year",
                                                        ],
                                                        "timeSelect": "select time",
                                                        "today": "Today",
                                                        "weekPlaceholder": "Select week",
                                                        "weekSelect": "Choose a week",
                                                        "year": "Year",
                                                        "yearFormat": "YYYY",
                                                        "yearPlaceholder": "Select year",
                                                        "yearSelect": "Choose a year",
                                                      }
                                                    }
                                                    nextIcon={
                                                      <span
                                                        className="ant-picker-next-icon"
                                                      />
                                                    }
                                                    onChange={[Function]}
                                                    pickerRef={
                                                      Object {
                                                        "current": Object {
                                                          "blur": [Function],
                                                          "focus": [Function],
                                                        },
                                                      }
                                                    }
                                                    placeholder="Select date"
                                                    prefixCls="ant-picker"
                                                    prevIcon={
                                                      <span
                                                        className="ant-picker-prev-icon"
                                                      />
                                                    }
                                                    showToday={true}
                                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                    superNextIcon={
                                                      <span
                                                        className="ant-picker-super-next-icon"
                                                      />
                                                    }
                                                    superPrevIcon={
                                                      <span
                                                        className="ant-picker-super-prev-icon"
                                                      />
                                                    }
                                                    tabIndex={-1}
                                                    transitionName="slide-up"
                                                    value={null}
                                                  />
                                                </div>
                                              }
                                              popupAlign={Object {}}
                                              popupClassName=""
                                              popupPlacement="bottomLeft"
                                              popupStyle={Object {}}
                                              popupTransitionName="slide-up"
                                              popupVisible={false}
                                              prefixCls="ant-picker-dropdown"
                                              showAction={Array []}
                                            >
                                              <div
                                                className="ant-picker"
                                                key="trigger"
                                                onMouseUp={[Function]}
                                              >
                                                <div
                                                  className="ant-picker-input"
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    placeholder="Select date"
                                                    readOnly={true}
                                                    size={22}
                                                    title=""
                                                    value=""
                                                  />
                                                  <span
                                                    className="ant-picker-suffix"
                                                  >
                                                    <ForwardRef(CalendarOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "calendar",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="calendar"
                                                          className="anticon anticon-calendar"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "calendar",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="calendar"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-calendar"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                                key="svg-calendar-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CalendarOutlined)>
                                                  </span>
                                                </div>
                                              </div>
                                            </Trigger>
                                          </PickerTrigger>
                                        </InnerPicker>
                                      </Picker>
                                    </LocaleReceiver>
                                  </Picker>
                                </Component>
                              </div>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 6,
                  "span": 12,
                }
              }
            >
              <Row
                className="ant-form-item"
                gutter={0}
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 6,
                        "span": 12,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={6}
                      span={12}
                    >
                      <div
                        className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Button
                              block={false}
                              ghost={false}
                              htmlType="submit"
                              loading={false}
                              type="primary"
                            >
                              <Wave>
                                <button
                                  className="ant-btn ant-btn-primary"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <LoadingIcon
                                    existIcon={false}
                                    loading={false}
                                    prefixCls="ant-btn"
                                  >
                                    <ForwardRef
                                      motionName="ant-btn-loading-icon-motion"
                                      onAppearActive={[Function]}
                                      onAppearStart={[Function]}
                                      onEnterActive={[Function]}
                                      onEnterStart={[Function]}
                                      onLeaveActive={[Function]}
                                      onLeaveStart={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <CSSMotion
                                        internalRef={null}
                                        motionAppear={true}
                                        motionEnter={true}
                                        motionLeave={true}
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      />
                                    </ForwardRef>
                                  </LoadingIcon>
                                  <span
                                    key=".0"
                                  >
                                    Submit
                                  </span>
                                </button>
                              </Wave>
                            </Button>
                          </div>
                        </div>
                        <ForwardRef
                          motionAppear={true}
                          motionName="show-help"
                          onLeaveEnd={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <CSSMotion
                            internalRef={null}
                            motionAppear={true}
                            motionEnter={true}
                            motionLeave={true}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          />
                        </ForwardRef>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CatalogCreateForm>
</Provider>
`;
