// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Product edit component snapshot testing should match when loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ProductEdit>
    <Skeleton
      avatar={false}
      paragraph={true}
      title={true}
    >
      <div
        className="ant-skeleton"
      >
        <div
          className="ant-skeleton-content"
        >
          <Title
            prefixCls="ant-skeleton-title"
            width="38%"
          >
            <h3
              className="ant-skeleton-title"
              style={
                Object {
                  "width": "38%",
                }
              }
            />
          </Title>
          <Paragraph
            prefixCls="ant-skeleton-paragraph"
            rows={3}
            width="61%"
          >
            <ul
              className="ant-skeleton-paragraph"
            >
              <li
                key="0"
                style={
                  Object {
                    "width": undefined,
                  }
                }
              />
              <li
                key="1"
                style={
                  Object {
                    "width": undefined,
                  }
                }
              />
              <li
                key="2"
                style={
                  Object {
                    "width": "61%",
                  }
                }
              />
            </ul>
          </Paragraph>
        </div>
      </div>
    </Skeleton>
  </ProductEdit>
</Provider>
`;

exports[`Product edit component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ProductEdit>
    <ProductCreateForm
      data={
        Object {
          "created_at": "2020-12-12",
          "currency_id": 1,
          "dataset_ids": undefined,
          "id": 1,
          "price": 100,
          "slug": "slug",
          "status": "status",
          "tag_ids": Array [
            1,
          ],
          "tags": Array [
            1,
          ],
          "title": "title",
        }
      }
      onSubmit={[Function]}
    >
      <ForwardRef(InternalForm)
        form={
          Object {
            "__INTERNAL__": Object {
              "itemRef": [Function],
              "name": "products_create",
            },
            "getFieldError": [Function],
            "getFieldInstance": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={
          Object {
            "created_at": "2020-12-12",
            "currency_id": 1,
            "dataset_ids": undefined,
            "id": 1,
            "price": 100,
            "slug": "slug",
            "status": "status",
            "tag_ids": Array [
              1,
            ],
            "tags": Array [
              1,
            ],
            "title": "title",
          }
        }
        labelCol={
          Object {
            "span": 6,
          }
        }
        name="products_create"
        onFinish={[Function]}
        wrapperCol={
          Object {
            "span": 14,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-horizontal"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "products_create",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="products_create"
            initialValues={
              Object {
                "created_at": "2020-12-12",
                "currency_id": 1,
                "dataset_ids": undefined,
                "id": 1,
                "price": 100,
                "slug": "slug",
                "status": "status",
                "tag_ids": Array [
                  1,
                ],
                "tags": Array [
                  1,
                ],
                "title": "title",
              }
            }
            name="products_create"
            onFinish={[Function]}
            onFinishFailed={[Function]}
          >
            <form
              className="ant-form ant-form-horizontal"
              id="products_create"
              onSubmit={[Function]}
            >
              <FormItem
                label="Title"
                name="title"
                rules={
                  Array [
                    Object {
                      "message": "Please enter title!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Title"
                  messageVariables={
                    Object {
                      "label": "Title",
                    }
                  }
                  name="title"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter title!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_title"
                    label="Title"
                    messageVariables={
                      Object {
                        "label": "Title",
                      }
                    }
                    name={
                      Array [
                        "title",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter title!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_title"
                          label="Title"
                          name="title"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter title!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_title"
                                title="Title"
                              >
                                Title
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Title"
                          name={
                            Array [
                              "title",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter title!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="title"
                                  >
                                    <Input
                                      id="products_create_title"
                                      onChange={[Function]}
                                      placeholder="Ex. Crime In India"
                                      type="text"
                                      value="title"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="products_create_title"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Crime In India"
                                            type="text"
                                            value="title"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="products_create_title"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. Crime In India"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value="title"
                                      >
                                        <input
                                          className="ant-input"
                                          id="products_create_title"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Crime In India"
                                          type="text"
                                          value="title"
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Slug"
                name="slug"
                rules={
                  Array [
                    Object {
                      "message": "Please enter slug!",
                      "required": true,
                    },
                    Object {
                      "message": "Please enter valid slug!",
                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Slug"
                  messageVariables={
                    Object {
                      "label": "Slug",
                    }
                  }
                  name="slug"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter slug!",
                        "required": true,
                      },
                      Object {
                        "message": "Please enter valid slug!",
                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_slug"
                    label="Slug"
                    messageVariables={
                      Object {
                        "label": "Slug",
                      }
                    }
                    name={
                      Array [
                        "slug",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter slug!",
                          "required": true,
                        },
                        Object {
                          "message": "Please enter valid slug!",
                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_slug"
                          label="Slug"
                          name="slug"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter slug!",
                                "required": true,
                              },
                              Object {
                                "message": "Please enter valid slug!",
                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_slug"
                                title="Slug"
                              >
                                Slug
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Slug"
                          name={
                            Array [
                              "slug",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter slug!",
                                "required": true,
                              },
                              Object {
                                "message": "Please enter valid slug!",
                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="slug"
                                  >
                                    <Input
                                      id="products_create_slug"
                                      onChange={[Function]}
                                      placeholder="Ex. crime-in-india"
                                      type="text"
                                      value="slug"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="products_create_slug"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. crime-in-india"
                                            type="text"
                                            value="slug"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="products_create_slug"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. crime-in-india"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value="slug"
                                      >
                                        <input
                                          className="ant-input"
                                          id="products_create_slug"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. crime-in-india"
                                          type="text"
                                          value="slug"
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Description"
                name="description"
                rules={
                  Array [
                    Object {
                      "message": "Please enter catalog description!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name="description"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter catalog description!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_description"
                    label="Description"
                    messageVariables={
                      Object {
                        "label": "Description",
                      }
                    }
                    name={
                      Array [
                        "description",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter catalog description!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_description"
                          label="Description"
                          name="description"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter catalog description!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_description"
                                title="Description"
                              >
                                Description
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Description"
                          name={
                            Array [
                              "description",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter catalog description!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <TextArea
                                      id="products_create_description"
                                      onChange={[Function]}
                                      placeholder="Ex. Package of datasets of Indian cricket"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="products_create_description"
                                            onChange={[Function]}
                                            placeholder="Ex. Package of datasets of Indian cricket"
                                            prefixCls="ant-input"
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="products_create_description"
                                        inputType="text"
                                        onChange={[Function]}
                                        placeholder="Ex. Package of datasets of Indian cricket"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        value=""
                                      >
                                        <TextArea
                                          className=""
                                          id="products_create_description"
                                          onChange={[Function]}
                                          placeholder="Ex. Package of datasets of Indian cricket"
                                          prefixCls="ant-input"
                                          value=""
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="products_create_description"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Package of datasets of Indian cricket"
                                            prefixCls="ant-input"
                                            value=""
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <textarea
                                                className="ant-input"
                                                id="products_create_description"
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Ex. Package of datasets of Indian cricket"
                                                style={Object {}}
                                                value=""
                                              />
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </TextArea>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Currency"
                name="currency_id"
                rules={
                  Array [
                    Object {
                      "message": "Please enter currency!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Currency"
                  messageVariables={
                    Object {
                      "label": "Currency",
                    }
                  }
                  name="currency_id"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter currency!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_currency_id"
                    label="Currency"
                    messageVariables={
                      Object {
                        "label": "Currency",
                      }
                    }
                    name={
                      Array [
                        "currency_id",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter currency!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_currency_id"
                          label="Currency"
                          name="currency_id"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter currency!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_currency_id"
                                title="Currency"
                              >
                                Currency
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Currency"
                          name={
                            Array [
                              "currency_id",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter currency!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value={1}
                                  >
                                    <Selector
                                      action="Currencies"
                                      field="iso_code"
                                      id="products_create_currency_id"
                                      onChange={[Function]}
                                      value={1}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={
                                          Array [
                                            1,
                                          ]
                                        }
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode={false}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add currencies"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              1,
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          mode={false}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add currencies"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                1,
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={null}
                                            mode={false}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add currencies"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-single ant-select-show-arrow"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={false}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={
                                                      Array [
                                                        Object {
                                                          "data": Object {
                                                            "children": "INR",
                                                            "key": "1",
                                                            "value": 1,
                                                          },
                                                          "groupOption": false,
                                                          "key": "1",
                                                        },
                                                      ]
                                                    }
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "children": "INR",
                                                          "key": "1",
                                                          "value": 1,
                                                        },
                                                      ]
                                                    }
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={
                                                      Set {
                                                        1,
                                                      }
                                                    }
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={
                                                          Array [
                                                            Object {
                                                              "data": Object {
                                                                "children": "INR",
                                                                "key": "1",
                                                                "value": 1,
                                                              },
                                                              "groupOption": false,
                                                              "key": "1",
                                                            },
                                                          ]
                                                        }
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "children": "INR",
                                                              "key": "1",
                                                              "value": 1,
                                                            },
                                                          ]
                                                        }
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            1,
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName=""
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-item"
                                                            title="INR"
                                                          >
                                                            INR
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={null}
                                                    mode={false}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add currencies"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={false}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={
                                                      Array [
                                                        Object {
                                                          "disabled": undefined,
                                                          "key": 1,
                                                          "label": "INR",
                                                          "value": 1,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SingleSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="INR"
                                                              >
                                                                INR
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        mode={false}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add currencies"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": 1,
                                                              "label": "INR",
                                                              "value": 1,
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <span
                                                          className="ant-select-selection-search"
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            editable={false}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-item"
                                                          title="INR"
                                                        >
                                                          INR
                                                        </span>
                                                      </SingleSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                              <TransBtn
                                                className="ant-select-arrow"
                                                customizeIcon={[Function]}
                                                customizeIconProps={
                                                  Object {
                                                    "focused": false,
                                                    "loading": false,
                                                    "open": undefined,
                                                    "searchValue": "",
                                                    "showSearch": false,
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-hidden={true}
                                                  className="ant-select-arrow"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "WebkitUserSelect": "none",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                  unselectable="on"
                                                >
                                                  <ForwardRef(DownOutlined)
                                                    className="ant-select-suffix"
                                                  >
                                                    <AntdIcon
                                                      className="ant-select-suffix"
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="down"
                                                        className="anticon anticon-down ant-select-suffix"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="down"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-down"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                              key="svg-down-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(DownOutlined)>
                                                </span>
                                              </TransBtn>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Price"
                name="price"
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name="price"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_price"
                    label="Price"
                    messageVariables={
                      Object {
                        "label": "Price",
                      }
                    }
                    name={
                      Array [
                        "price",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter price!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_price"
                          label="Price"
                          name="price"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_price"
                                title="Price"
                              >
                                Price
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Price"
                          name={
                            Array [
                              "price",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value={100}
                                  >
                                    <Input
                                      id="products_create_price"
                                      onChange={[Function]}
                                      placeholder="Ex. 1999"
                                      type="number"
                                      value={100}
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="products_create_price"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. 1999"
                                            type="number"
                                            value={100}
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="products_create_price"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. 1999"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="number"
                                        value={100}
                                      >
                                        <input
                                          className="ant-input"
                                          id="products_create_price"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. 1999"
                                          type="number"
                                          value={100}
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Tag"
                name="tag_ids"
                rules={
                  Array [
                    Object {
                      "message": "Please select atleast one tag!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Tag"
                  messageVariables={
                    Object {
                      "label": "Tag",
                    }
                  }
                  name="tag_ids"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select atleast one tag!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_tag_ids"
                    label="Tag"
                    messageVariables={
                      Object {
                        "label": "Tag",
                      }
                    }
                    name={
                      Array [
                        "tag_ids",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please select atleast one tag!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_tag_ids"
                          label="Tag"
                          name="tag_ids"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please select atleast one tag!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_tag_ids"
                                title="Tag"
                              >
                                Tag
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Tag"
                          name={
                            Array [
                              "tag_ids",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please select atleast one tag!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value={
                                      Array [
                                        1,
                                      ]
                                    }
                                  >
                                    <Selector
                                      action="Tags"
                                      field="title"
                                      id="products_create_tag_ids"
                                      multiple={true}
                                      onChange={[Function]}
                                      value={
                                        Array [
                                          1,
                                        ]
                                      }
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={
                                          Array [
                                            1,
                                          ]
                                        }
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode="multiple"
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add tags"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              1,
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add tags"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                1,
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add tags"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-multiple ant-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={false}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={
                                                      Array [
                                                        Object {
                                                          "data": Object {
                                                            "children": "tag1",
                                                            "key": "1",
                                                            "value": 1,
                                                          },
                                                          "groupOption": false,
                                                          "key": "1",
                                                        },
                                                      ]
                                                    }
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "children": "tag1",
                                                          "key": "1",
                                                          "value": 1,
                                                        },
                                                      ]
                                                    }
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={
                                                      Set {
                                                        1,
                                                      }
                                                    }
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={
                                                          Array [
                                                            Object {
                                                              "data": Object {
                                                                "children": "tag1",
                                                                "key": "1",
                                                                "value": 1,
                                                              },
                                                              "groupOption": false,
                                                              "key": "1",
                                                            },
                                                          ]
                                                        }
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "children": "tag1",
                                                              "key": "1",
                                                              "value": 1,
                                                            },
                                                          ]
                                                        }
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            1,
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName=""
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-item"
                                                          >
                                                            <span
                                                              class="ant-select-selection-item-content"
                                                            >
                                                              tag1
                                                            </span>
                                                            <span
                                                              aria-hidden="true"
                                                              class="ant-select-selection-item-remove"
                                                              style="user-select: none;"
                                                              unselectable="on"
                                                            >
                                                              <span
                                                                aria-label="close"
                                                                class="anticon anticon-close"
                                                                role="img"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  class=""
                                                                  data-icon="close"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height="1em"
                                                                  viewBox="64 64 896 896"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                  />
                                                                </svg>
                                                              </span>
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="ant-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add tags"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={true}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={
                                                      Array [
                                                        Object {
                                                          "disabled": undefined,
                                                          "key": 1,
                                                          "label": "tag1",
                                                          "value": 1,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-item"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-item-content"
                                                                >
                                                                  tag1
                                                                </span>
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="ant-select-selection-item-remove"
                                                                  style="user-select: none;"
                                                                  unselectable="on"
                                                                >
                                                                  <span
                                                                    aria-label="close"
                                                                    class="anticon anticon-close"
                                                                    role="img"
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      class=""
                                                                      data-icon="close"
                                                                      fill="currentColor"
                                                                      focusable="false"
                                                                      height="1em"
                                                                      viewBox="64 64 896 896"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                      />
                                                                    </svg>
                                                                  </span>
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add tags"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={true}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": 1,
                                                              "label": "tag1",
                                                              "value": 1,
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": 1,
                                                                "label": "tag1",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                          motionAppear={true}
                                                          motionName=""
                                                        >
                                                          <CSSMotion
                                                            eventProps={
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": "1",
                                                                "label": "tag1",
                                                                "value": 1,
                                                              }
                                                            }
                                                            key="1"
                                                            motionAppear={true}
                                                            motionName=""
                                                            onVisibleChanged={[Function]}
                                                            visible={true}
                                                          >
                                                            <DomWrapper>
                                                              <span
                                                                className="ant-select-selection-item"
                                                                key="1"
                                                              >
                                                                <span
                                                                  className="ant-select-selection-item-content"
                                                                >
                                                                  tag1
                                                                </span>
                                                                <TransBtn
                                                                  className="ant-select-selection-item-remove"
                                                                  customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                  onClick={[Function]}
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="ant-select-selection-item-remove"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "WebkitUserSelect": "none",
                                                                        "userSelect": "none",
                                                                      }
                                                                    }
                                                                    unselectable="on"
                                                                  >
                                                                    <ForwardRef(CloseOutlined)>
                                                                      <AntdIcon
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "close",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          aria-label="close"
                                                                          className="anticon anticon-close"
                                                                          role="img"
                                                                        >
                                                                          <IconReact
                                                                            className=""
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className=""
                                                                              data-icon="close"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              key="svg-close"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                key="svg-close-svg-0"
                                                                              />
                                                                            </svg>
                                                                          </IconReact>
                                                                        </span>
                                                                      </AntdIcon>
                                                                    </ForwardRef(CloseOutlined)>
                                                                  </span>
                                                                </TransBtn>
                                                              </span>
                                                            </DomWrapper>
                                                          </CSSMotion>
                                                        </CSSMotionList>
                                                        <span
                                                          className="ant-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="ant-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Status"
                name="status"
                rules={
                  Array [
                    Object {
                      "message": "Please enter status!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Status"
                  messageVariables={
                    Object {
                      "label": "Status",
                    }
                  }
                  name="status"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter status!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_status"
                    label="Status"
                    messageVariables={
                      Object {
                        "label": "Status",
                      }
                    }
                    name={
                      Array [
                        "status",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter status!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_status"
                          label="Status"
                          name="status"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_status"
                                title="Status"
                              >
                                Status
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Status"
                          name={
                            Array [
                              "status",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="status"
                                  >
                                    <Select
                                      bordered={true}
                                      choiceTransitionName=""
                                      filterOption={[Function]}
                                      id="products_create_status"
                                      onChange={[Function]}
                                      placeholder="Select status"
                                      showSearch={true}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      transitionName="slide-up"
                                      value="status"
                                    >
                                      <Select
                                        choiceTransitionName=""
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        id="products_create_status"
                                        inputIcon={[Function]}
                                        listHeight={256}
                                        listItemHeight={24}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        placeholder="Select status"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        showSearch={true}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                        transitionName="slide-up"
                                        value="status"
                                      >
                                        <ForwardRef(Select)
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          id="products_create_status"
                                          inputIcon={[Function]}
                                          listHeight={256}
                                          listItemHeight={24}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          placeholder="Select status"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          showSearch={true}
                                          style={
                                            Object {
                                              "width": "100%",
                                            }
                                          }
                                          transitionName="slide-up"
                                          value="status"
                                        >
                                          <div
                                            className="ant-select ant-select-single ant-select-show-arrow ant-select-show-search"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={false}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={
                                                    Array [
                                                      Object {
                                                        "data": Object {
                                                          "children": "Show",
                                                          "key": "1",
                                                          "value": "Show",
                                                        },
                                                        "groupOption": false,
                                                        "key": "1",
                                                      },
                                                      Object {
                                                        "data": Object {
                                                          "children": "Hide",
                                                          "key": "2",
                                                          "value": "Hide",
                                                        },
                                                        "groupOption": false,
                                                        "key": "2",
                                                      },
                                                    ]
                                                  }
                                                  height={256}
                                                  id="products_create_status"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "children": "Show",
                                                        "key": "1",
                                                        "value": "Show",
                                                      },
                                                      Object {
                                                        "children": "Hide",
                                                        "key": "2",
                                                        "value": "Hide",
                                                      },
                                                    ]
                                                  }
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={
                                                    Set {
                                                      "status",
                                                    }
                                                  }
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "children": "Show",
                                                              "key": "1",
                                                              "value": "Show",
                                                            },
                                                            "groupOption": false,
                                                            "key": "1",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "children": "Hide",
                                                              "key": "2",
                                                              "value": "Hide",
                                                            },
                                                            "groupOption": false,
                                                            "key": "2",
                                                          },
                                                        ]
                                                      }
                                                      height={256}
                                                      id="products_create_status"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "children": "Show",
                                                            "key": "1",
                                                            "value": "Show",
                                                          },
                                                          Object {
                                                            "children": "Hide",
                                                            "key": "2",
                                                            "value": "Hide",
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          "status",
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName=""
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName=""
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="products_create_status_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="products_create_status_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="products_create_status_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="products_create_status"
                                                            role="combobox"
                                                            type="search"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-item"
                                                          title="status"
                                                        >
                                                          status
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  id="products_create_status"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Select status"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={true}
                                                  style={
                                                    Object {
                                                      "width": "100%",
                                                    }
                                                  }
                                                  tokenWithEnter={false}
                                                  transitionName="slide-up"
                                                  value="status"
                                                  values={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "key": "status",
                                                        "label": "status",
                                                        "value": "status",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="products_create_status_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="products_create_status_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="products_create_status_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="products_create_status"
                                                                role="combobox"
                                                                type="search"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-item"
                                                              title="status"
                                                            >
                                                              status
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      id="products_create_status"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="products_create_status_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="products_create_status_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="products_create_status_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="products_create_status"
                                                            role="combobox"
                                                            type="search"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={256}
                                                      listItemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select status"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      tokenWithEnter={false}
                                                      transitionName="slide-up"
                                                      value="status"
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "key": "status",
                                                            "label": "status",
                                                            "value": "status",
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          attrs={Object {}}
                                                          editable={true}
                                                          id="products_create_status"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="products_create_status_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="products_create_status_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="products_create_status_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="products_create_status"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={false}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": null,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable={null}
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-item"
                                                        title="status"
                                                      >
                                                        status
                                                      </span>
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow"
                                              customizeIcon={[Function]}
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": undefined,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": true,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-select-suffix"
                                                >
                                                  <AntdIcon
                                                    className="ant-select-suffix"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-select-suffix"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </Select>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Datasets"
                name="dataset_ids"
                rules={
                  Array [
                    Object {
                      "message": "Please select atleast one dataset!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Datasets"
                  messageVariables={
                    Object {
                      "label": "Datasets",
                    }
                  }
                  name="dataset_ids"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select atleast one dataset!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_dataset_ids"
                    label="Datasets"
                    messageVariables={
                      Object {
                        "label": "Datasets",
                      }
                    }
                    name={
                      Array [
                        "dataset_ids",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please select atleast one dataset!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="products_create_dataset_ids"
                          label="Datasets"
                          name="dataset_ids"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please select atleast one dataset!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="products_create_dataset_ids"
                                title="Datasets"
                              >
                                Datasets
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Datasets"
                          name={
                            Array [
                              "dataset_ids",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please select atleast one dataset!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Selector
                                      action="Datasets"
                                      field="title"
                                      id="products_create_dataset_ids"
                                      multiple={true}
                                      onChange={[Function]}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={Array []}
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode="multiple"
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add datasets"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add datasets"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={Array []}
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add datasets"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-multiple ant-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="ant-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="ant-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-placeholder"
                                                          >
                                                            Add datasets
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add datasets"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={true}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-placeholder"
                                                              >
                                                                Add datasets
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add datasets"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={true}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                          motionName=""
                                                        />
                                                        <span
                                                          className="ant-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="ant-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-placeholder"
                                                        >
                                                          Add datasets
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                wrapperCol={
                  Object {
                    "offset": 6,
                    "span": 12,
                  }
                }
              >
                <Row
                  className="ant-form-item"
                  key="row"
                >
                  <div
                    className="ant-row ant-form-item"
                    style={Object {}}
                  >
                    <FormItemLabel
                      prefixCls="ant-form"
                      requiredMark={true}
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    />
                    <FormItemInput
                      errors={Array []}
                      onDomErrorVisibleChange={[Function]}
                      prefixCls="ant-form"
                      validateStatus=""
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    >
                      <Col
                        className="ant-form-item-control"
                        offset={6}
                        span={12}
                      >
                        <div
                          className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                          style={Object {}}
                        >
                          <div
                            className="ant-form-item-control-input"
                          >
                            <div
                              className="ant-form-item-control-input-content"
                            >
                              <Button
                                block={false}
                                ghost={false}
                                htmlType="submit"
                                loading={false}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary"
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Submit
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                            </div>
                          </div>
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </div>
                      </Col>
                    </FormItemInput>
                  </div>
                </Row>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </ProductCreateForm>
  </ProductEdit>
</Provider>
`;
