// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Plans List component snapshot testing should match component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditPlan>
    <PlanCreateForm
      onSubmit={[Function]}
    >
      <ForwardRef(InternalForm)
        initialValues={Object {}}
        labelCol={
          Object {
            "span": 6,
          }
        }
        name="plans_create"
        onFinish={[Function]}
        wrapperCol={
          Object {
            "span": 14,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-horizontal"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "plans_create",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="plans_create"
            initialValues={Object {}}
            name="plans_create"
            onFinish={[Function]}
            onFinishFailed={[Function]}
          >
            <form
              className="ant-form ant-form-horizontal"
              id="plans_create"
              onSubmit={[Function]}
            >
              <FormItem
                label="Name"
                name="name"
                rules={
                  Array [
                    Object {
                      "message": "Please enter plan name!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Name"
                  messageVariables={
                    Object {
                      "label": "Name",
                    }
                  }
                  name="name"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter plan name!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_name"
                    label="Name"
                    messageVariables={
                      Object {
                        "label": "Name",
                      }
                    }
                    name={
                      Array [
                        "name",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter plan name!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_name"
                          label="Name"
                          name="name"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter plan name!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_name"
                                title="Name"
                              >
                                Name
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Name"
                          name={
                            Array [
                              "name",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter plan name!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Input
                                      id="plans_create_name"
                                      onChange={[Function]}
                                      placeholder="Ex. Premium"
                                      type="text"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="plans_create_name"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Premium"
                                            type="text"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="plans_create_name"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. Premium"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <input
                                          className="ant-input"
                                          id="plans_create_name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Premium"
                                          type="text"
                                          value=""
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Description"
                name="description"
              >
                <WrapperField
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name="description"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_description"
                    label="Description"
                    messageVariables={
                      Object {
                        "label": "Description",
                      }
                    }
                    name={
                      Array [
                        "description",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_description"
                          label="Description"
                          name="description"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_description"
                                title="Description"
                              >
                                Description
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Description"
                          name={
                            Array [
                              "description",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <TextArea
                                      id="plans_create_description"
                                      onChange={[Function]}
                                      placeholder="Ex. Allows users to access premium content"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="plans_create_description"
                                            onChange={[Function]}
                                            placeholder="Ex. Allows users to access premium content"
                                            prefixCls="ant-input"
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="plans_create_description"
                                        inputType="text"
                                        onChange={[Function]}
                                        placeholder="Ex. Allows users to access premium content"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        value=""
                                      >
                                        <TextArea
                                          className=""
                                          id="plans_create_description"
                                          onChange={[Function]}
                                          placeholder="Ex. Allows users to access premium content"
                                          prefixCls="ant-input"
                                          value=""
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="plans_create_description"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Allows users to access premium content"
                                            prefixCls="ant-input"
                                            value=""
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <textarea
                                                className="ant-input"
                                                id="plans_create_description"
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Ex. Allows users to access premium content"
                                                style={Object {}}
                                                value=""
                                              />
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </TextArea>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Currency"
                name="currency_id"
                rules={
                  Array [
                    Object {
                      "message": "Please select currency!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Currency"
                  messageVariables={
                    Object {
                      "label": "Currency",
                    }
                  }
                  name="currency_id"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select currency!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_currency_id"
                    label="Currency"
                    messageVariables={
                      Object {
                        "label": "Currency",
                      }
                    }
                    name={
                      Array [
                        "currency_id",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please select currency!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_currency_id"
                          label="Currency"
                          name="currency_id"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please select currency!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_currency_id"
                                title="Currency"
                              >
                                Currency
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Currency"
                          name={
                            Array [
                              "currency_id",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please select currency!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Selector
                                      action="Currencies"
                                      field="iso_code"
                                      id="plans_create_currency_id"
                                      onChange={[Function]}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode={false}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add currencies"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          mode={false}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add currencies"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                Array [],
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={null}
                                            mode={false}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add currencies"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-single ant-select-show-arrow"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={
                                                      Set {
                                                        Array [],
                                                      }
                                                    }
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            Array [],
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="ant-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={
                                                      Array [
                                                        Array [],
                                                      ]
                                                    }
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-item"
                                                          />
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={null}
                                                    mode={false}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add currencies"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={false}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={
                                                      Array [
                                                        Object {
                                                          "disabled": undefined,
                                                          "key": Array [],
                                                          "label": Array [],
                                                          "value": Array [],
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SingleSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            Array [],
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                              />
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        mode={false}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add currencies"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": Array [],
                                                              "label": Array [],
                                                              "value": Array [],
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <span
                                                          className="ant-select-selection-search"
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            editable={false}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-item"
                                                        />
                                                      </SingleSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                              <TransBtn
                                                className="ant-select-arrow"
                                                customizeIcon={[Function]}
                                                customizeIconProps={
                                                  Object {
                                                    "focused": false,
                                                    "loading": false,
                                                    "open": undefined,
                                                    "searchValue": "",
                                                    "showSearch": false,
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-hidden={true}
                                                  className="ant-select-arrow"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "WebkitUserSelect": "none",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                  unselectable="on"
                                                >
                                                  <ForwardRef(DownOutlined)
                                                    className="ant-select-suffix"
                                                  >
                                                    <AntdIcon
                                                      className="ant-select-suffix"
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="down"
                                                        className="anticon anticon-down ant-select-suffix"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="down"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-down"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                              key="svg-down-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(DownOutlined)>
                                                </span>
                                              </TransBtn>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Users"
                name="users"
                rules={
                  Array [
                    Object {
                      "message": "Please enter no. of users!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Users"
                  messageVariables={
                    Object {
                      "label": "Users",
                    }
                  }
                  name="users"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter no. of users!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_users"
                    label="Users"
                    messageVariables={
                      Object {
                        "label": "Users",
                      }
                    }
                    name={
                      Array [
                        "users",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter no. of users!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_users"
                          label="Users"
                          name="users"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter no. of users!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_users"
                                title="Users"
                              >
                                Users
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Users"
                          name={
                            Array [
                              "users",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter no. of users!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_users"
                                      onChange={[Function]}
                                      placeholder="Ex. 5"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_users"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 5"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_users"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 5"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Price"
                name="price"
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name="price"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_price"
                    label="Price"
                    messageVariables={
                      Object {
                        "label": "Price",
                      }
                    }
                    name={
                      Array [
                        "price",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter price!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_price"
                          label="Price"
                          name="price"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_price"
                                title="Price"
                              >
                                Price
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Price"
                          name={
                            Array [
                              "price",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_price"
                                      onChange={[Function]}
                                      placeholder="Ex. 1999"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_price"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 1999"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_price"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 1999"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Duration"
                name="duration"
                rules={
                  Array [
                    Object {
                      "message": "Please enter duration!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Duration"
                  messageVariables={
                    Object {
                      "label": "Duration",
                    }
                  }
                  name="duration"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter duration!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_duration"
                    label="Duration"
                    messageVariables={
                      Object {
                        "label": "Duration",
                      }
                    }
                    name={
                      Array [
                        "duration",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter duration!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_duration"
                          label="Duration"
                          name="duration"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter duration!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_duration"
                                title="Duration"
                              >
                                Duration
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Duration"
                          name={
                            Array [
                              "duration",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter duration!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_duration"
                                      onChange={[Function]}
                                      placeholder="Ex. 30"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_duration"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 30"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_duration"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 30"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Status"
                name="status"
                rules={
                  Array [
                    Object {
                      "message": "Please enter status!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Status"
                  messageVariables={
                    Object {
                      "label": "Status",
                    }
                  }
                  name="status"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter status!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_status"
                    label="Status"
                    messageVariables={
                      Object {
                        "label": "Status",
                      }
                    }
                    name={
                      Array [
                        "status",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter status!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_status"
                          label="Status"
                          name="status"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_status"
                                title="Status"
                              >
                                Status
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Status"
                          name={
                            Array [
                              "status",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Input
                                      id="plans_create_status"
                                      onChange={[Function]}
                                      placeholder="Ex. Pending"
                                      type="text"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="plans_create_status"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Pending"
                                            type="text"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="plans_create_status"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. Pending"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <input
                                          className="ant-input"
                                          id="plans_create_status"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Pending"
                                          type="text"
                                          value=""
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="All Catalogs"
                name="all_products"
              >
                <WrapperField
                  label="All Catalogs"
                  messageVariables={
                    Object {
                      "label": "All Catalogs",
                    }
                  }
                  name="all_products"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_all_products"
                    label="All Catalogs"
                    messageVariables={
                      Object {
                        "label": "All Catalogs",
                      }
                    }
                    name={
                      Array [
                        "all_products",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_all_products"
                          label="All Catalogs"
                          name="all_products"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_all_products"
                                title="All Catalogs"
                              >
                                All Catalogs
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="All Catalogs"
                          name={
                            Array [
                              "all_products",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Switch
                                      id="plans_create_all_products"
                                      onChange={[Function]}
                                    >
                                      <Wave
                                        insertExtraNode={true}
                                      >
                                        <Switch
                                          className=""
                                          id="plans_create_all_products"
                                          loadingIcon={
                                            <div
                                              className="ant-switch-handle"
                                            />
                                          }
                                          onChange={[Function]}
                                          prefixCls="ant-switch"
                                        >
                                          <button
                                            aria-checked={false}
                                            className="ant-switch"
                                            id="plans_create_all_products"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="switch"
                                            type="button"
                                          >
                                            <div
                                              className="ant-switch-handle"
                                            />
                                            <span
                                              className="ant-switch-inner"
                                            />
                                          </button>
                                        </Switch>
                                      </Wave>
                                    </Switch>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                hidden={false}
                label="Catalogs"
                name="catalogs"
              >
                <WrapperField
                  hidden={false}
                  label="Catalogs"
                  messageVariables={
                    Object {
                      "label": "Catalogs",
                    }
                  }
                  name="catalogs"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    hidden={false}
                    key="_catalogs"
                    label="Catalogs"
                    messageVariables={
                      Object {
                        "label": "Catalogs",
                      }
                    }
                    name={
                      Array [
                        "catalogs",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          hidden={false}
                          htmlFor="plans_create_catalogs"
                          label="Catalogs"
                          name="catalogs"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_catalogs"
                                title="Catalogs"
                              >
                                Catalogs
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          hidden={false}
                          label="Catalogs"
                          name={
                            Array [
                              "catalogs",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Selector
                                      action="Catalogs"
                                      field="id"
                                      id="plans_create_catalogs"
                                      multiple={true}
                                      onChange={[Function]}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={Array []}
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode="multiple"
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add catalogs"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add catalogs"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={Array []}
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add catalogs"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-multiple ant-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="ant-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="ant-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-placeholder"
                                                          >
                                                            Add catalogs
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add catalogs"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={true}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-placeholder"
                                                              >
                                                                Add catalogs
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add catalogs"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={true}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                          motionName=""
                                                        />
                                                        <span
                                                          className="ant-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="ant-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-placeholder"
                                                        >
                                                          Add catalogs
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                wrapperCol={
                  Object {
                    "offset": 6,
                    "span": 12,
                  }
                }
              >
                <Row
                  className="ant-form-item"
                  key="row"
                >
                  <div
                    className="ant-row ant-form-item"
                    style={Object {}}
                  >
                    <FormItemLabel
                      prefixCls="ant-form"
                      requiredMark={true}
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    />
                    <FormItemInput
                      errors={Array []}
                      onDomErrorVisibleChange={[Function]}
                      prefixCls="ant-form"
                      validateStatus=""
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    >
                      <Col
                        className="ant-form-item-control"
                        offset={6}
                        span={12}
                      >
                        <div
                          className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                          style={Object {}}
                        >
                          <div
                            className="ant-form-item-control-input"
                          >
                            <div
                              className="ant-form-item-control-input-content"
                            >
                              <Button
                                block={false}
                                ghost={false}
                                htmlType="submit"
                                loading={false}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary"
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Submit
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                            </div>
                          </div>
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </div>
                      </Col>
                    </FormItemInput>
                  </div>
                </Row>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </PlanCreateForm>
  </EditPlan>
</Provider>
`;

exports[`Plans List component snapshot testing should match skeleton while loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditPlan>
    <Skeleton
      avatar={false}
      paragraph={true}
      title={true}
    >
      <div
        className="ant-skeleton"
      >
        <div
          className="ant-skeleton-content"
        >
          <Title
            prefixCls="ant-skeleton-title"
            width="38%"
          >
            <h3
              className="ant-skeleton-title"
              style={
                Object {
                  "width": "38%",
                }
              }
            />
          </Title>
          <Paragraph
            prefixCls="ant-skeleton-paragraph"
            rows={3}
            width="61%"
          >
            <ul
              className="ant-skeleton-paragraph"
            >
              <li
                key="0"
                style={
                  Object {
                    "width": undefined,
                  }
                }
              />
              <li
                key="1"
                style={
                  Object {
                    "width": undefined,
                  }
                }
              />
              <li
                key="2"
                style={
                  Object {
                    "width": "61%",
                  }
                }
              />
            </ul>
          </Paragraph>
        </div>
      </div>
    </Skeleton>
  </EditPlan>
</Provider>
`;

exports[`Plans List component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditPlan>
    <PlanCreateForm
      data={
        Object {
          "description": "description",
          "id": 1,
          "name": "Plan-1",
          "slug": "plan-1",
        }
      }
      onSubmit={[Function]}
    >
      <ForwardRef(InternalForm)
        initialValues={
          Object {
            "description": "description",
            "id": 1,
            "name": "Plan-1",
            "slug": "plan-1",
          }
        }
        labelCol={
          Object {
            "span": 6,
          }
        }
        name="plans_create"
        onFinish={[Function]}
        wrapperCol={
          Object {
            "span": 14,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-horizontal"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "plans_create",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="plans_create"
            initialValues={
              Object {
                "description": "description",
                "id": 1,
                "name": "Plan-1",
                "slug": "plan-1",
              }
            }
            name="plans_create"
            onFinish={[Function]}
            onFinishFailed={[Function]}
          >
            <form
              className="ant-form ant-form-horizontal"
              id="plans_create"
              onSubmit={[Function]}
            >
              <FormItem
                label="Name"
                name="name"
                rules={
                  Array [
                    Object {
                      "message": "Please enter plan name!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Name"
                  messageVariables={
                    Object {
                      "label": "Name",
                    }
                  }
                  name="name"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter plan name!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_name"
                    label="Name"
                    messageVariables={
                      Object {
                        "label": "Name",
                      }
                    }
                    name={
                      Array [
                        "name",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter plan name!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_name"
                          label="Name"
                          name="name"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter plan name!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_name"
                                title="Name"
                              >
                                Name
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Name"
                          name={
                            Array [
                              "name",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter plan name!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="Plan-1"
                                  >
                                    <Input
                                      id="plans_create_name"
                                      onChange={[Function]}
                                      placeholder="Ex. Premium"
                                      type="text"
                                      value="Plan-1"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="plans_create_name"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Premium"
                                            type="text"
                                            value="Plan-1"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="plans_create_name"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. Premium"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value="Plan-1"
                                      >
                                        <input
                                          className="ant-input"
                                          id="plans_create_name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Premium"
                                          type="text"
                                          value="Plan-1"
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Description"
                name="description"
              >
                <WrapperField
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name="description"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_description"
                    label="Description"
                    messageVariables={
                      Object {
                        "label": "Description",
                      }
                    }
                    name={
                      Array [
                        "description",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_description"
                          label="Description"
                          name="description"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_description"
                                title="Description"
                              >
                                Description
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Description"
                          name={
                            Array [
                              "description",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="description"
                                  >
                                    <TextArea
                                      id="plans_create_description"
                                      onChange={[Function]}
                                      placeholder="Ex. Allows users to access premium content"
                                      value="description"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="plans_create_description"
                                            onChange={[Function]}
                                            placeholder="Ex. Allows users to access premium content"
                                            prefixCls="ant-input"
                                            value="description"
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="plans_create_description"
                                        inputType="text"
                                        onChange={[Function]}
                                        placeholder="Ex. Allows users to access premium content"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        value="description"
                                      >
                                        <TextArea
                                          className=""
                                          id="plans_create_description"
                                          onChange={[Function]}
                                          placeholder="Ex. Allows users to access premium content"
                                          prefixCls="ant-input"
                                          value="description"
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="plans_create_description"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Allows users to access premium content"
                                            prefixCls="ant-input"
                                            value="description"
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <textarea
                                                className="ant-input"
                                                id="plans_create_description"
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Ex. Allows users to access premium content"
                                                style={Object {}}
                                                value="description"
                                              />
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </TextArea>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Currency"
                name="currency_id"
                rules={
                  Array [
                    Object {
                      "message": "Please select currency!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Currency"
                  messageVariables={
                    Object {
                      "label": "Currency",
                    }
                  }
                  name="currency_id"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select currency!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_currency_id"
                    label="Currency"
                    messageVariables={
                      Object {
                        "label": "Currency",
                      }
                    }
                    name={
                      Array [
                        "currency_id",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please select currency!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_currency_id"
                          label="Currency"
                          name="currency_id"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please select currency!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_currency_id"
                                title="Currency"
                              >
                                Currency
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Currency"
                          name={
                            Array [
                              "currency_id",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please select currency!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Selector
                                      action="Currencies"
                                      field="iso_code"
                                      id="plans_create_currency_id"
                                      onChange={[Function]}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode={false}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add currencies"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          mode={false}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add currencies"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                Array [],
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={null}
                                            mode={false}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add currencies"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-single ant-select-show-arrow"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={
                                                      Set {
                                                        Array [],
                                                      }
                                                    }
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            Array [],
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="ant-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={
                                                      Array [
                                                        Array [],
                                                      ]
                                                    }
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-item"
                                                          />
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={null}
                                                    mode={false}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add currencies"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={false}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={
                                                      Array [
                                                        Object {
                                                          "disabled": undefined,
                                                          "key": Array [],
                                                          "label": Array [],
                                                          "value": Array [],
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SingleSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            Array [],
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                              />
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        mode={false}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add currencies"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": Array [],
                                                              "label": Array [],
                                                              "value": Array [],
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <span
                                                          className="ant-select-selection-search"
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            editable={false}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-item"
                                                        />
                                                      </SingleSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                              <TransBtn
                                                className="ant-select-arrow"
                                                customizeIcon={[Function]}
                                                customizeIconProps={
                                                  Object {
                                                    "focused": false,
                                                    "loading": false,
                                                    "open": undefined,
                                                    "searchValue": "",
                                                    "showSearch": false,
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-hidden={true}
                                                  className="ant-select-arrow"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "WebkitUserSelect": "none",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                  unselectable="on"
                                                >
                                                  <ForwardRef(DownOutlined)
                                                    className="ant-select-suffix"
                                                  >
                                                    <AntdIcon
                                                      className="ant-select-suffix"
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="down"
                                                        className="anticon anticon-down ant-select-suffix"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="down"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-down"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                              key="svg-down-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(DownOutlined)>
                                                </span>
                                              </TransBtn>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Users"
                name="users"
                rules={
                  Array [
                    Object {
                      "message": "Please enter no. of users!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Users"
                  messageVariables={
                    Object {
                      "label": "Users",
                    }
                  }
                  name="users"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter no. of users!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_users"
                    label="Users"
                    messageVariables={
                      Object {
                        "label": "Users",
                      }
                    }
                    name={
                      Array [
                        "users",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter no. of users!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_users"
                          label="Users"
                          name="users"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter no. of users!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_users"
                                title="Users"
                              >
                                Users
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Users"
                          name={
                            Array [
                              "users",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter no. of users!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_users"
                                      onChange={[Function]}
                                      placeholder="Ex. 5"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_users"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 5"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_users"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 5"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Price"
                name="price"
                rules={
                  Array [
                    Object {
                      "message": "Please enter price!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Price"
                  messageVariables={
                    Object {
                      "label": "Price",
                    }
                  }
                  name="price"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter price!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_price"
                    label="Price"
                    messageVariables={
                      Object {
                        "label": "Price",
                      }
                    }
                    name={
                      Array [
                        "price",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter price!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_price"
                          label="Price"
                          name="price"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_price"
                                title="Price"
                              >
                                Price
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Price"
                          name={
                            Array [
                              "price",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter price!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_price"
                                      onChange={[Function]}
                                      placeholder="Ex. 1999"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_price"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 1999"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_price"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 1999"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Duration"
                name="duration"
                rules={
                  Array [
                    Object {
                      "message": "Please enter duration!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Duration"
                  messageVariables={
                    Object {
                      "label": "Duration",
                    }
                  }
                  name="duration"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter duration!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_duration"
                    label="Duration"
                    messageVariables={
                      Object {
                        "label": "Duration",
                      }
                    }
                    name={
                      Array [
                        "duration",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter duration!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_duration"
                          label="Duration"
                          name="duration"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter duration!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_duration"
                                title="Duration"
                              >
                                Duration
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Duration"
                          name={
                            Array [
                              "duration",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter duration!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <ForwardRef
                                      id="plans_create_duration"
                                      onChange={[Function]}
                                      placeholder="Ex. 30"
                                      step={1}
                                    >
                                      <InputNumber
                                        autoComplete="off"
                                        className=""
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        focusOnUpDown={true}
                                        id="plans_create_duration"
                                        max={9007199254740991}
                                        min={-9007199254740991}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onPressEnter={[Function]}
                                        parser={[Function]}
                                        placeholder="Ex. 30"
                                        prefixCls="ant-input-number"
                                        required={false}
                                        step={1}
                                        style={Object {}}
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                        useTouch={false}
                                      >
                                        <div
                                          className="ant-input-number"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      className=""
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className=""
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemax={9007199254740991}
                                              aria-valuemin={-9007199254740991}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="plans_create_duration"
                                              max={9007199254740991}
                                              min={-9007199254740991}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="Ex. 30"
                                              required={false}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Status"
                name="status"
                rules={
                  Array [
                    Object {
                      "message": "Please enter status!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Status"
                  messageVariables={
                    Object {
                      "label": "Status",
                    }
                  }
                  name="status"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter status!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_status"
                    label="Status"
                    messageVariables={
                      Object {
                        "label": "Status",
                      }
                    }
                    name={
                      Array [
                        "status",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter status!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_status"
                          label="Status"
                          name="status"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="plans_create_status"
                                title="Status"
                              >
                                Status
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Status"
                          name={
                            Array [
                              "status",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter status!",
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Input
                                      id="plans_create_status"
                                      onChange={[Function]}
                                      placeholder="Ex. Pending"
                                      type="text"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="plans_create_status"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Ex. Pending"
                                            type="text"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="plans_create_status"
                                        inputType="input"
                                        onChange={[Function]}
                                        placeholder="Ex. Pending"
                                        prefixCls="ant-input"
                                        triggerFocus={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <input
                                          className="ant-input"
                                          id="plans_create_status"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Ex. Pending"
                                          type="text"
                                          value=""
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="All Catalogs"
                name="all_products"
              >
                <WrapperField
                  label="All Catalogs"
                  messageVariables={
                    Object {
                      "label": "All Catalogs",
                    }
                  }
                  name="all_products"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_all_products"
                    label="All Catalogs"
                    messageVariables={
                      Object {
                        "label": "All Catalogs",
                      }
                    }
                    name={
                      Array [
                        "all_products",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="plans_create_all_products"
                          label="All Catalogs"
                          name="all_products"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_all_products"
                                title="All Catalogs"
                              >
                                All Catalogs
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="All Catalogs"
                          name={
                            Array [
                              "all_products",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Switch
                                      id="plans_create_all_products"
                                      onChange={[Function]}
                                    >
                                      <Wave
                                        insertExtraNode={true}
                                      >
                                        <Switch
                                          className=""
                                          id="plans_create_all_products"
                                          loadingIcon={
                                            <div
                                              className="ant-switch-handle"
                                            />
                                          }
                                          onChange={[Function]}
                                          prefixCls="ant-switch"
                                        >
                                          <button
                                            aria-checked={false}
                                            className="ant-switch"
                                            id="plans_create_all_products"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="switch"
                                            type="button"
                                          >
                                            <div
                                              className="ant-switch-handle"
                                            />
                                            <span
                                              className="ant-switch-inner"
                                            />
                                          </button>
                                        </Switch>
                                      </Wave>
                                    </Switch>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                hidden={false}
                label="Catalogs"
                name="catalogs"
              >
                <WrapperField
                  hidden={false}
                  label="Catalogs"
                  messageVariables={
                    Object {
                      "label": "Catalogs",
                    }
                  }
                  name="catalogs"
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    hidden={false}
                    key="_catalogs"
                    label="Catalogs"
                    messageVariables={
                      Object {
                        "label": "Catalogs",
                      }
                    }
                    name={
                      Array [
                        "catalogs",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          hidden={false}
                          htmlFor="plans_create_catalogs"
                          label="Catalogs"
                          name="catalogs"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={6}
                          >
                            <div
                              className="ant-col ant-col-6 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="plans_create_catalogs"
                                title="Catalogs"
                              >
                                Catalogs
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          hidden={false}
                          label="Catalogs"
                          name={
                            Array [
                              "catalogs",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                  >
                                    <Selector
                                      action="Catalogs"
                                      field="id"
                                      id="plans_create_catalogs"
                                      multiple={true}
                                      onChange={[Function]}
                                    >
                                      <Select
                                        bordered={true}
                                        choiceTransitionName=""
                                        defaultValue={Array []}
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={false}
                                        mode="multiple"
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        placeholder="Add catalogs"
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={Array []}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                          mode="multiple"
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          placeholder="Add catalogs"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          transitionName="slide-up"
                                        >
                                          <ForwardRef(Select)
                                            choiceTransitionName=""
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={Array []}
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            placeholder="Add catalogs"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            transitionName="slide-up"
                                          >
                                            <div
                                              className="ant-select ant-select-multiple ant-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={128}
                                                    id="rc_select_TEST_OR_SSR"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onScroll={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="ant-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    choiceTransitionName=""
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="ant-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-placeholder"
                                                          >
                                                            Add catalogs
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    multiple={true}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Add catalogs"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={true}
                                                    tokenWithEnter={false}
                                                    transitionName="slide-up"
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-placeholder"
                                                              >
                                                                Add catalogs
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        multiple={true}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Add catalogs"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={true}
                                                        tokenWithEnter={false}
                                                        transitionName="slide-up"
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                          motionName=""
                                                        />
                                                        <span
                                                          className="ant-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="rc_select_TEST_OR_SSR"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="ant-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-placeholder"
                                                        >
                                                          Add catalogs
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </Select>
                                    </Selector>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                wrapperCol={
                  Object {
                    "offset": 6,
                    "span": 12,
                  }
                }
              >
                <Row
                  className="ant-form-item"
                  key="row"
                >
                  <div
                    className="ant-row ant-form-item"
                    style={Object {}}
                  >
                    <FormItemLabel
                      prefixCls="ant-form"
                      requiredMark={true}
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    />
                    <FormItemInput
                      errors={Array []}
                      onDomErrorVisibleChange={[Function]}
                      prefixCls="ant-form"
                      validateStatus=""
                      wrapperCol={
                        Object {
                          "offset": 6,
                          "span": 12,
                        }
                      }
                    >
                      <Col
                        className="ant-form-item-control"
                        offset={6}
                        span={12}
                      >
                        <div
                          className="ant-col ant-col-12 ant-col-offset-6 ant-form-item-control"
                          style={Object {}}
                        >
                          <div
                            className="ant-form-item-control-input"
                          >
                            <div
                              className="ant-form-item-control-input-content"
                            >
                              <Button
                                block={false}
                                ghost={false}
                                htmlType="submit"
                                loading={false}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary"
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Submit
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                            </div>
                          </div>
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </div>
                      </Col>
                    </FormItemInput>
                  </div>
                </Row>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </PlanCreateForm>
  </EditPlan>
</Provider>
`;
